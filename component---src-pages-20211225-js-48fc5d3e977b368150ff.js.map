{"version":3,"file":"component---src-pages-20211225-js-48fc5d3e977b368150ff.js","mappings":"iIAaA,IAXA,YAAgD,IAAlBA,EAAiB,EAAjBA,cAC5B,OACE,kBACEC,IAAG,iDAAmDD,EAAnD,sDACHE,MAAK,GAAKF,EACVG,MAAM,qJACNC,QAAQ,+F,2CCMd,IAZA,YAAqC,IAAbC,EAAY,EAAZA,SACtB,OACE,kBACEC,MAAM,MAAMC,OAAO,MACnBN,IAAG,iCAAmCI,EACtCH,MAAM,uBACNC,MAAM,2FACNK,iBAAiB,M,wNCIvBC,EAAAA,EAAAA,KACO,IACDC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,+BACA,gDACA,uBACF,wBACE,kBAAQC,OAAM,0BAA2BC,EAAAA,EAAAA,KAAYC,KAAK,gBAC1D,eAAKjB,IAAG,yBAA0BgB,EAAAA,EAAAA,KAAYE,IAAI,OAEpD,2CAEE,2BACE,aAAGC,WAAW,cAAd,yBAAoD,sBAAYA,WAAW,KAAvB,SAApD,aAAkH,sBAAYA,WAAW,KAAvB,QAAlH,mBAEF,oBACA,6BACA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,00CAHR,eA4DA,wCACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,i3BAHR,eA8CA,2BACE,aAAGA,WAAW,cAAd,0FACA,aAAGA,WAAW,cAAd,6EAEF,8BACA,QAAC,IAAD,CAAoBpB,cAAe,kBAAmBe,QAAQ,wBAC9D,oBACA,+BACA,kBAAG,kBAAQK,WAAW,KAAnB,0BACH,kBAAG,cAAIA,WAAW,KAAf,+BACH,QAAC,IAAD,CAAYC,KAAK,oDAAoDN,QAAQ,cAA7E,UAKJH,EAAWU,gBAAiB,E,4CCpG5B,MAnDA,WACE,IAAMC,EAAW,uBACXC,EAAY,oBACZC,EAAY,oCACZC,EAAe,aACfC,EAAiBD,EAAaE,QAAQ,MAAO,IAC7CC,EAAcN,EAAcI,EAC5BG,EAAYP,EAAc,KAAOI,EACjCI,EAAW,qBAEjB,OACE,QAAC,IAAD,MACE,QAAC,EAAAC,UAAD,CACE9B,MAAUuB,EAAL,MAAoBD,EACzBS,YAAaF,EACbG,UAAWL,EACXM,SAAU,CAAC,CACTC,SAAU,WACVC,QAAS,iEAEXC,UAAW,CACTpB,KAAM,UACNhB,MAAOsB,EACPS,YAAaR,EACbc,IAAKV,EACLW,OAAQ,CAAC,CAAED,IAAKT,EAAY,qBAGhC,mBAASW,UAAWC,EAAAA,KAClB,kBAAKjB,IACL,qBAAQM,IACR,oBAAOL,IACP,wBACE,kBAAQV,OAAM,MAAQW,EAAR,kBAAuCV,EAAAA,EAAAA,KAAYC,KAAK,gBACtE,eAAKjB,IAAG,MAAQ0B,EAAR,iBAAsCV,EAAAA,EAAAA,KAAYE,IAAI,OAEhE,QAAC,EAAD,OACA,kBAAQsB,UAAWC,EAAAA,IAAnB,UAEF,sBAAO,QAAC,IAAD,QACP,QAAC,IAAD,CACEC,gBAAe,YACfC,cAAe,0BACfC,YAAW,YACXC,UAAW,kCAEb,QAAC,IAAD","sources":["webpack://dev1studio/./src/components/utilities/codeSandbox.js","webpack://dev1studio/./src/components/utilities/youTube.js","webpack://dev1studio/./src/contents/20211225.mdx","webpack://dev1studio/./src/pages/20211225.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction CodeSandboxPreview({ SENDBOX_TITLE }) {\n  return (\n    <iframe\n      src={`https://codesandbox.io/embed/github/naninyang/${SENDBOX_TITLE}/tree/main/?fontsize=14&hidenavigation=1&theme=dark`}\n      title={`${SENDBOX_TITLE}`}\n      allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n    />\n  )\n}\n\nexport default CodeSandboxPreview\n","import * as React from \"react\"\n\nfunction YouTubeVideo({ VIDEO_ID }) {\n  return (\n    <iframe\n      width=\"560\" height=\"315\"\n      src={`https://www.youtube.com/embed/${VIDEO_ID}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  )\n}\n\nexport default YouTubeVideo\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport YouTubeVideo from '../components/utilities/youTube';\nimport CodeSandboxPreview from '../components/utilities/codeSandbox';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`React로 간단한 성탄 카드를 만들어 볼게요!`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211225/tree.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211225/tree.png?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>예제로 사용할 이미지</figcaption>\n    </figure>\n    <blockquote>\n      <p parentName=\"blockquote\">{`예제 이미지는 브라우저 버전에 따라서 `}<inlineCode parentName=\"p\">{`.webp`}</inlineCode>{`로 보일 수도, `}<inlineCode parentName=\"p\">{`.png`}</inlineCode>{`로 보일 수도 있습니다.`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2>{`App.js`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import { ThemeProvider } from \"@emotion/react\"\nimport styled from \"@emotion/styled\"\nimport styles from \"./index.module.sass\"\n\nconst theme = {\n  middle: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n}\n\nconst Container = styled.button((props) => ({\n  width: \"340px\",\n  height: \"480px\",\n  position: props.theme.middle.position,\n  left: props.theme.middle.left,\n  transform: props.theme.middle.transform,\n}))\n\nconst Contents = styled.div({\n  width: \"100%\",\n  height: \"100%\",\n  overflow: \"hidden\",\n  backfaceVisibility: \"hidden\",\n  position: \"absolute\",\n  transition: \"transform .5s linear\",\n})\n\nconst BackContents = styled.div((props) => ({\n  position: props.theme.middle.position,\n  top: props.theme.middle.top,\n  left: props.theme.middle.left,\n  transform: props.theme.middle.transform,\n}))\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container type=\"button\" className={styles.Container}>\n        <Contents className={styles.Cover} />\n        <Contents className={styles.Main}>\n          <BackContents className={styles.BackContent}>\n            <h1>Merry Christmas</h1>\n            <p>Happy Holiday</p>\n          </BackContents>\n        </Contents>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nexport default App`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`index.module.sass`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"sass\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`@import url('https://fonts.googleapis.com/css2?family=Love+Light&family=Zilla+Slab+Highlight:wght@700&display=swap')\n\n*\n  margin: 0\n  padding: 0\n  text-dectoration: none\n\nbody\n  background: #b18979\n\nbutton\n  padding: 0\n  border: 0\n  background-color: transparent\n  cursor: pointer\n\n.Container:hover >\n  .Cover\n    transform: perspective(600px) rotateY(-180deg)\n  .Main\n    transform: perspective(600px) rotateY(0deg)\n\n.Cover\n  background: url(https://uploads.codesandbox.io/uploads/user/5408ce2b-8ac4-40cc-be47-ff3b66b025e3/ai-Z-tree.png) no-repeat 50% 50%/contain\n\n.Main\n  background-color: transparent\n  transform: rotateY(180deg)\n\n.BackContent\n  color: #2c3e50\n  text-align: center\n  width: 100%\n\n  h1\n    font-size: 3rem\n    font-family: 'Love Light', cursive\n  p\n    font-size: 2.5rem\n    font-family: 'Zilla Slab Highlight', cursive`}</code>{`\n        `}</deckgo-highlight-code>\n    <blockquote>\n      <p parentName=\"blockquote\">{`여기서는 Google Fonts를 구글 서버에서 바로 import하는 방식을 취했지만 실무에서는 @fontsource 패키지를 사용하는 것을 추천합니다.`}</p>\n      <p parentName=\"blockquote\">{`@fontsource 패키지 사용하여 웹폰트 사용하는 방법은 언젠가 시간이 될 때 예제 코드로 설명하는 시간을 가지도록 할게요.`}</p>\n    </blockquote>\n    <h2>{`Preview`}</h2>\n    <CodeSandboxPreview SENDBOX_TITLE={'react-christmas'} mdxType=\"CodeSandboxPreview\" />\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p><strong parentName=\"p\">{`즐거운 캐롤과 함께 홀리데이 보내길!`}</strong></p>\n    <p><em parentName=\"p\">{`(캐롤입니다. 케빈 아니구요, 컬킨 아닙니다)`}</em></p>\n    <LinkButton href='https://various-artists.postype.com/post/11278509' mdxType=\"LinkButton\">관련 링크</LinkButton>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20211225'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = 'Merry Christmas and Happy Holiday'\n  const pageDateTime = '2021.12.25'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = '메리 크리스마스! 해피 홀리데이!'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'react, style, christmas, holiday, 리액트, 스타일, 크리스마스, 홀리데이, 성탄절'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/summary.png' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20211222`}\n        previousTitle={'Vanilla 환경에서 한글로 뻘 코딩하기'}\n        nextAddress={`/20211227`}\n        nextTitle={'Apple 웹사이트 헤더처럼 배경에 블러 효과 주기'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["SENDBOX_TITLE","src","title","allow","sandbox","VIDEO_ID","width","height","allowFullScreen","deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","srcSet","uuidv4","type","alt","parentName","href","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle","nextAddress","nextTitle"],"sourceRoot":""}