{"version":3,"file":"component---src-pages-20220112-js-3dedfe5b2a6897f5b597.js","mappings":"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","sources":["webpack://dev1studio/./src/components/utilities/codeSandbox.js","webpack://dev1studio/./src/components/utilities/youTube.js","webpack://dev1studio/./src/contents/20220112.mdx","webpack://dev1studio/./src/pages/20220112.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction CodeSandboxPreview({ SENDBOX_TITLE }) {\n  return (\n    <iframe\n      src={`https://codesandbox.io/embed/github/naninyang/${SENDBOX_TITLE}/tree/main/?fontsize=14&hidenavigation=1&theme=dark`}\n      title={`${SENDBOX_TITLE}`}\n      allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n    />\n  )\n}\n\nexport default CodeSandboxPreview\n","import * as React from \"react\"\n\nfunction YouTubeVideo({ VIDEO_ID }) {\n  return (\n    <iframe\n      width=\"560\" height=\"315\"\n      src={`https://www.youtube.com/embed/${VIDEO_ID}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  )\n}\n\nexport default YouTubeVideo\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport YouTubeVideo from '../components/utilities/youTube';\nimport CodeSandboxPreview from '../components/utilities/codeSandbox';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`Angular, React, Svelte, 그리고 Vue를 macOS에서 시작해 봅시다!`}</p>\n    <hr></hr>\n    <h2>{`공통 설치과정`}</h2>\n    <p>{`4개의 프레임워크는 `}<inlineCode parentName=\"p\">{`JavaScript`}</inlineCode>{` 또는 `}<inlineCode parentName=\"p\">{`TypeScript`}</inlineCode>{` 기반이기 때문에 `}<inlineCode parentName=\"p\">{`Node.js`}</inlineCode>{`가 필요합니다.`}</p>\n    <LinkButton href='https://nodejs.org/en' mdxType=\"LinkButton\">Node.js 공식 웹사이트</LinkButton>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20220112/started.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20220112/started.jpg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>LTS를 선택하세요</figcaption>\n    </figure>\n    <p>{`글 작성 날짜 기준으로 LTS 버전은 16.13.1 입니다.`}</p>\n    <p>{`버전을 맞출 필요 없으니 가장 최신의 LTS 버전으로 설치해 주세요. 다만 취미 또는 테스트 용도로 사용할 생각이라면 Current 버전 설치도 상관 없습니다.`}</p>\n    <p>{`설치 및 세팅시 root가 아닌 user local로 경로를 설정해서 사용하는 것을 추천합니다. 이렇게 세팅하면 npm, yarn 패키지 설치시 root 권한이 아닌 user 권한으로 설치가 가능합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`## root에 설치시 sudo 필요\n$ sudo npm i -g vue\n\n## user에 설치시 sudo 필요없음\n$ npm i -g vue\n`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`Homebrew 사용해서 설치하지 마세요. 추천하지 않습니다.`}</p>\n    <h2>{`Angular`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`UPDATE: Angular.js(1.x)는 Google에서 더 이상 지원하지 않으므로 설치 방법을 따로 언급하지 않습니다.`}</p>\n    </blockquote>\n    <p>{`angluar-cli 패키지를 설치합니다. cli를 이용하면 프로젝트 생성과 세팅이 자동으로 이루어집니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ npm i -g @angular/cli\n$ ng new project-name`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`개발 서버 실행은 ng 명령어를 쓸 수도 있고 npm 명령어를 쓸 수도 있습니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ ng serve\n\n## 또는\n\n$ npm start`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`React (CRA)`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ReactJS(React), Next.js 그리고 React Native(RN)의 설치 방법을 안내합니다`}</p>\n    </blockquote>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ npx create-react-app project-name\n$ cd project-name\n$ npm start`}</code>{`\n        `}</deckgo-highlight-code>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20220112/simple-is-best.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20220112/simple-is-best.jpg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>심플 이즈 베스트 (출처: ㅍㅍㅅㅅ)</figcaption>\n    </figure>\n    <h2>{`Next.js (CNA)`}</h2>\n    <p>{`React 프로젝트 없이 Next.js로 처음부터 프로젝트를 시작하려면 다음과 같이 입력합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`## npx\n$ npx create-next-app\n\n## yarn\n$ yarn create next-app`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`React 프로젝트 위에 Next.js를 추가로 얹고 싶다면 다소 복잡하지만 다음과 같이 몇가지 패키지와 `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`을 편집하세요.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ npm i next\n\n## react-dom 설치가 안되어 있을 때는 react-dom 추가 설치 필요\n$ npm i react-dom\n\n## next, react-dom 같이 설치\n$ npm i next react-dom`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"json\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// package.json\n\"scripts\": {\n  \"dev\": \"next dev\",\n  \"build\": \"next build\",\n  \"start\": \"next start\",\n  \"lint\": \"next lint\"\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`기존에는 `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`의 `}<inlineCode parentName=\"p\">{`scripts`}</inlineCode>{`에 react가 언급되어 있는데 위와같이 next로 변경하세요.`}</p>\n    <p><inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` 파일은 브라우저를 refresh 한다고 해서 적용이 되는 게 아니기 때문에 만약 개발서버가 동작하고 있다면 `}<inlineCode parentName=\"p\">{`ctrl`}</inlineCode>{` + `}<inlineCode parentName=\"p\">{`c`}</inlineCode>{`를 눌러서 닫아주세요.`}</p>\n    <h2>{`React Native`}</h2>\n    <p>{`Expo 환경이냐, Metro 환경이냐에 따라서 세팅이 다르며, 실행 방법도 다릅니다.`}</p>\n    <p>{`그리고 Android는 Java 환경이므로 Adroid Studio 외에도 설치 및 세팅해야 할 게 많습니다.`}</p>\n    <p>{`iPad, iOS는 Xcode 외에도 CocoaPod를 설치해야 하는 과정이 있습니다. (인텔맥, 애플 실리콘 여부에 따라서도 세팅이 달라짐)`}</p>\n    <LinkButton href='https://reactnative.dev/docs/environment-setup' mdxType=\"LinkButton\">공식문서를</LinkButton> 확인하세요\n    <h2>{`Svelte`}</h2>\n    <p>{`Svelte는 degit이라고 하는 bundler를 이용해 프로젝트를 생성합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ npx degit sveltejs/template project-name\n$ cd project-name\n$ npm i\n$ npm run dev`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`참고로 degit은 github repository를 이용해 템플릿을 설치하는 bundler라고 생각하면 됩니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`sveltejs templete`}</inlineCode>{`에 대한 내용은 `}<LinkButton href='https://github.com/sveltejs/template' mdxType=\"LinkButton\">{`여기를`}</LinkButton>{` 참조하세요.`}</p>\n    <h2>{`SvelteKit`}</h2>\n    <p>{`SvelteKit은 React의 Next.js, Vue.js의 Nuxt.js와 같이 여러가지 키트를 지원해주는 Svelte용 framework 입니다.`}</p>\n    <p>{`Svelte와 다르게 SvelteKit은 npm init으로 프로젝트를 생성합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ npm init svelte@next project-name\n$ cd project-name\n$ npm i\n$ npm run dev`}</code>{`\n        `}</deckgo-highlight-code>\n    <blockquote>\n      <p parentName=\"blockquote\">{`글 쓰는 시점에서는 SvelteKit은 베타 버전입니다. 불안정할 수 있습니다.`}</p>\n    </blockquote>\n    <h2>{`Vue`}</h2>\n    <p>{`vue 패키지와 vue cli 패키지를 설치해야 합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ npm i -g vue\n$ npm i -g @vue/cli`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`vue는 프로젝트 생성시 몇 가지 템플릿을 골라서 생성할 수 있습니다.`}</p>\n    <p>{`템플릿 종류로는 browserify, browserify-simple, simple, webpack, webpack-simple 이렇게 있습니다.`}</p>\n    <p>{`크게 browserify를 사용해 live server를 돌릴지, webpack을 사용해 live server를 돌릴지, 아니면 서버 구동없이 돌릴지 (simple) 3가지 방법으로 나눌 수 있고, browserify와 webpack에 붙은 -simple 여부는 테스트 코드를 작성할지 안할지를 고르는 거라고 생각하면 됩니다. (-simple이 테스트 코드 작성 안하는 템플릿)`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`## simple 템플릿 선택시\n$ vue init simple project-name`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`live server 세팅시 webpack이 가장 문서가 많으므로 템플릿은 `}<inlineCode parentName=\"p\">{`webpack`}</inlineCode>{`을 추천합니다.`}</p>\n    <h2>{`Nuxt`}</h2>\n    <p>{`Nuxt는 Next.js의 Vue 버전이라고 한다면 이해하기 쉽습니다. SSR 방식으로 렌더링합니다.`}</p>\n    <p>{`설치 방법은 React와 마찬가지로 Vue 프로젝트를 진행하고 있는 도중에 Nuxt 설치하기, 그리고 새 프로젝트로 처음부터 Nuxt로 설치하기 2가지로 나눌 수 있습니다.`}</p>\n    <p>{`새로 프로젝트를 시작할 때는 npm 또는 npx을 사용하면 됩니다. (모든 과정은 yarn도 지원합니다)`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`## npx\n$ npx create-nuxt-app project-name\n\n## npm\n$ npm init nuxt-app project-name\n\n## yarn\n$ yarn create nuxt-app project-name`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`이미 진행 중인 Vue 프로젝트에 Nuxt를 설치하기 위해서는 몇 가지를 수정하거나 추가/설치 해야 합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ npm i nuxt`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"json\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// package.json\n\"scripts\": {\n  \"dev\": \"nuxt\",\n  \"build\": \"nuxt build\",\n  \"generate\": \"nuxt generate\",\n  \"start\": \"nuxt start\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p>{`이번 글에서는 각 프레임워크를 맥OS에서 시작하는 방법에 대해 알아보았습니다.`}</p>\n    <p>{`다음 글에서는 실제로 개발하는 방법을 간단히 알아볼게요. `}<em parentName=\"p\">{`(실제로 간단할지는...)`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20220112'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = 'Angular, React, Svelte 그리고 Vue를 시작해볼까요?'\n  const pageDateTime = '2022.01.12'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = 'Get started Angular, React, Svelte, Vue. 그런데 macOS를 곁들인'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'angular, react, svelte, vue, 앵귤러, 리액트, 스벨트, 뷰, 설치하기, 시작하기'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/simple-is-best.jpg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20220110`}\n        previousTitle={'Angular, React, Svelte 그리고 Vue의 장단점'}\n        nextAddress={`/20220113`}\n        nextTitle={'Angular, React, Svelte 그리고 Vue를 이용해 개발 찍먹해보기'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["SENDBOX_TITLE","src","title","allow","sandbox","VIDEO_ID","width","height","allowFullScreen","deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","href","srcSet","uuidv4","type","alt","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle","nextAddress","nextTitle"],"sourceRoot":""}