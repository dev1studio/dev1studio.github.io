{"version":3,"file":"component---src-pages-20211227-js-3b432d2859b1dc98ca32.js","mappings":"oIAaA,IAXA,YAAgD,IAAlBA,EAAiB,EAAjBA,cAC5B,OACE,kBACEC,IAAG,iDAAmDD,EAAnD,sDACHE,MAAK,GAAKF,EACVG,MAAM,qJACNC,QAAQ,+F,2CCMd,IAZA,YAAqC,IAAbC,EAAY,EAAZA,SACtB,OACE,kBACEC,MAAM,MAAMC,OAAO,MACnBN,IAAG,iCAAmCI,EACtCH,MAAM,uBACNC,MAAM,2FACNK,iBAAiB,M,wNCIvBC,EAAAA,EAAAA,KACO,IACDC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,+BACA,uEACA,mFACA,oBACA,6BACA,iCACE,SAAY,OADd,gBAGQ,gBAAMC,WAAW,wBACrB,KAAQ,QADJ,gyDAHR,eAwFA,qCACA,+EACA,kDACA,iEACA,QAAC,IAAD,CAAYC,KAAK,8EAA8EF,QAAQ,cAAvG,UACA,kDACA,QAAC,IAAD,CAAYE,KAAK,0EAA0EF,QAAQ,cAAnG,UACA,8BACA,QAAC,IAAD,CAAoBf,cAAe,wBAAyBe,QAAQ,wBACpE,oBACA,+BACA,uBACF,wBACE,kBAAQG,OAAM,2BAA4BC,EAAAA,EAAAA,KAAYC,KAAK,gBAC3D,eAAKnB,IAAG,0BAA2BkB,EAAAA,EAAAA,KAAYE,IAAI,OAErD,yCAEE,yBAAW,sBAAYL,WAAW,KAAvB,YAAX,oDACA,6CAA+B,sBAAYA,WAAW,KAAvB,2BAA/B,aAA+G,sBAAYA,WAAW,KAAvB,mBAA/G,uBACA,mFAKJJ,EAAWU,gBAAiB,E,4CCpF5B,MAjDA,WACE,IAAMC,EAAW,uBACXC,EAAY,oBACZC,EAAY,+BACZC,EAAe,aACfC,EAAiBD,EAAaE,QAAQ,MAAO,IAC7CC,EAAcN,EAAcI,EAC5BG,EAAYP,EAAc,KAAOI,EACjCI,EAAW,+BAEjB,OACE,QAAC,IAAD,MACE,QAAC,EAAAC,UAAD,CACE9B,MAAUuB,EAAL,MAAoBD,EACzBS,YAAaF,EACbG,UAAWL,EACXM,SAAU,CAAC,CACTC,SAAU,WACVC,QAAS,gDAEXC,UAAW,CACTlB,KAAM,UACNlB,MAAOsB,EACPS,YAAaR,EACbc,IAAKV,EACLW,OAAQ,CAAC,CAAED,IAAKT,EAAY,oBAGhC,mBAASW,UAAWC,EAAAA,KAClB,kBAAKjB,IACL,qBAAQM,IACR,oBAAOL,IACP,wBACE,kBAAQR,OAAM,MAAQS,EAAR,kBAAuCR,EAAAA,EAAAA,KAAYC,KAAK,gBACtE,eAAKnB,IAAG,MAAQ0B,EAAR,iBAAsCR,EAAAA,EAAAA,KAAYE,IAAI,OAEhE,QAAC,EAAD,OACA,kBAAQoB,UAAWC,EAAAA,IAAnB,UAEF,sBAAO,QAAC,IAAD,QACP,QAAC,IAAD,CACEC,gBAAe,YACfC,cAAe,uCAEjB,QAAC,IAAD","sources":["webpack://dev1studio/./src/components/utilities/codeSandbox.js","webpack://dev1studio/./src/components/utilities/youTube.js","webpack://dev1studio/./src/contents/20211227.mdx","webpack://dev1studio/./src/pages/20211227.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction CodeSandboxPreview({ SENDBOX_TITLE }) {\n  return (\n    <iframe\n      src={`https://codesandbox.io/embed/github/naninyang/${SENDBOX_TITLE}/tree/main/?fontsize=14&hidenavigation=1&theme=dark`}\n      title={`${SENDBOX_TITLE}`}\n      allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n    />\n  )\n}\n\nexport default CodeSandboxPreview\n","import * as React from \"react\"\n\nfunction YouTubeVideo({ VIDEO_ID }) {\n  return (\n    <iframe\n      width=\"560\" height=\"315\"\n      src={`https://www.youtube.com/embed/${VIDEO_ID}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  )\n}\n\nexport default YouTubeVideo\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport YouTubeVideo from '../components/utilities/youTube';\nimport CodeSandboxPreview from '../components/utilities/codeSandbox';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`예전에는 CSS에서 처리할 방법이 없어서 HTML5의 canvas를 이용해 구현했습니다.`}</p>\n    <p>{`canvas 구현의 문제점은 퍼포먼스가 떨어진다는 점이었는데 요즘은 쉽게 CSS3를 이용해 구현이 가능합니다.`}</p>\n    <hr></hr>\n    <h2>{`Source`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import styled from \"@emotion/styled\"\nimport \"./index.sass\"\n\nconst Container = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\"\n})\n\nconst Header = styled.header({\n  right: 0,\n  left: 0,\n  zIndex: 1,\n  backdropFilter: \"saturate(180%) blur(20px)\",\n  position: \"fixed\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"72px\",\n  color: \"#fff\",\n  \"& h1, & h2\": {\n    margin: 0,\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  \"& h1\": {\n    backgroundColor: \"rgba(0,0,0,0.8)\",\n    padding: \".4em 0 .1em\",\n    fontSize: \"1.5rem\",\n    fontWeight: \"lighter\"\n  },\n  \"& h2\": {\n    backgroundColor: \"rgba(255,255,255,0.72)\",\n    padding: \".1em 0 .3em\",\n    fontSize: \"1.2rem\",\n    color: \"#000\"\n  }\n})\n\nconst Main = styled.main({\n  padding: \"1em\"\n})\n\nconst Section = styled.section({\n  \"& img\": {\n    maxWidth: \"100%\"\n  }\n})\n\nfunction App() {\n  return (\n    <Container>\n      <Header>\n        <h1>React Backdrop Filter</h1>\n        <h2>Image origin source by Apple</h2>\n      </Header>\n      <Main>\n        <Section>\n          <picture>\n            <img\n              src=\"https://www.apple.com/v/macbook-pro-14-and-16/b/images/overview/display/screen_xdr__fksbj0zqvtu2_large.jpg\"\n              alt=\"\"\n            />\n            <p>Blackmagic Design DaVinci Resolve</p>\n          </picture>\n        </Section>\n        <Section>\n          <picture>\n            <img\n              src=\"https://www.apple.com/v/macbook-pro-14-and-16/b/images/overview/macos/screen_macos__fuhzca3c0wia_large.jpg\"\n              alt=\"\"\n            />\n            <p>Beauty and the beast</p>\n          </picture>\n        </Section>\n      </Main>\n    </Container>\n  )\n}\n\nexport default App`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`backdropFilter`}</h2>\n    <p>{`위 코드에서 중요한 부분은 backdropFilter 입니다. (CSS: backdrop-filter)`}</p>\n    <p>{`saturate는 채도, blur는 블러 값입니다.`}</p>\n    <p>{`채도는 높으면 높을 수록 쨍한 느낌을 주고, 낮으면 낮을 수록 색이 죽습니다.`}</p>\n    <LinkButton href='https://developer.mozilla.org/en-US/docs/Web/CSS/filter-function/saturate()' mdxType=\"LinkButton\">관련 링크</LinkButton>\n    <p>{`blur는 값이 높을 수록 블러 효과가 강해집니다.`}</p>\n    <LinkButton href='https://developer.mozilla.org/en-US/docs/Web/CSS/filter-function/blur()' mdxType=\"LinkButton\">관련 링크</LinkButton>\n    <h2>{`Preview`}</h2>\n    <CodeSandboxPreview SENDBOX_TITLE={'react-backdrop-filter'} mdxType=\"CodeSandboxPreview\" />\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211227/apple.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211227/apple.png?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>앱등뽕이 차오른다</figcaption>\n    </figure>\n    <p>{`요즘은 `}<inlineCode parentName=\"p\">{`-webkit-`}</inlineCode>{` verdor prefix 없이 backdrop-filter 만으로도 적용이 됩니다.`}</p>\n    <p>{`하지만 오래된 웹킷 계열 브라우저를 위해서 `}<inlineCode parentName=\"p\">{`-webkit-backdrop-filter`}</inlineCode>{` 우선 선언하고 `}<inlineCode parentName=\"p\">{`backdrop-filter`}</inlineCode>{`를 추가로 선언하는 게 좋습니다.`}</p>\n    <p>{`참고로, emotion을 사용하면 자동으로 verdor prefix를 붙여주니 emotion 많이 애용하세요!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20211227'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = 'Apple 웹사이트 헤더처럼 배경에 블러 효과 주기'\n  const pageDateTime = '2021.12.27'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = 'Image Origin Source by Apple'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'react, style, apple, blur, 리액트, 스타일, 애플, 효과'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/apple.jpeg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20211225`}\n        previousTitle={'Merry Christmas and Happy Holiday'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["SENDBOX_TITLE","src","title","allow","sandbox","VIDEO_ID","width","height","allowFullScreen","deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","href","srcSet","uuidv4","type","alt","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle"],"sourceRoot":""}