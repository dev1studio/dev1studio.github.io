{"version":3,"file":"component---src-pages-20211218-js-4c52cc303b4cd9f6f6e4.js","mappings":"oIAcA,IAZA,YAAqC,IAAbA,EAAY,EAAZA,SACtB,OACE,kBACEC,MAAM,MAAMC,OAAO,MACnBC,IAAG,iCAAmCH,EACtCI,MAAM,uBACNC,MAAM,2FACNC,iBAAiB,M,yMCGvBC,EAAAA,EAAAA,KACO,IACDC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,+BACA,4CACA,2BACE,aAAGC,WAAW,eAAa,sBAAYA,WAAW,KAAvB,WAA3B,4BAEF,oBACA,oCACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,mKAHR,eAkBA,+BACA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,kVAHR,eAuBA,6BACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,6IAHR,eAUA,+GACA,0DACA,sFACA,uBACF,wBACE,kBAAQC,OAAM,4BAA6BC,EAAAA,EAAAA,KAAYC,KAAK,gBAC5D,eAAKd,IAAG,4BAA6Ba,EAAAA,EAAAA,KAAYE,IAAI,OAEvD,kCAEE,oBACA,+BACA,kBAAG,cAAIJ,WAAW,KAAf,sBAKPJ,EAAWS,gBAAiB,E,4CCxC5B,MAnDA,WACE,IAAMC,EAAW,uBACXC,EAAY,oBACZC,EAAY,6BACZC,EAAe,aACfC,EAAiBD,EAAaE,QAAQ,MAAO,IAC7CC,EAAcN,EAAcI,EAC5BG,EAAYP,EAAc,KAAOI,EACjCI,EAAW,SAEjB,OACE,QAAC,IAAD,MACE,QAAC,EAAAC,UAAD,CACEzB,MAAUkB,EAAL,MAAoBD,EACzBS,YAAaF,EACbG,UAAWL,EACXM,SAAU,CAAC,CACTC,SAAU,WACVC,QAAS,uEAEXC,UAAW,CACTlB,KAAM,UACNb,MAAOiB,EACPS,YAAaR,EACbc,IAAKV,EACLW,OAAQ,CAAC,CAAED,IAAKT,EAAY,qBAGhC,mBAASW,UAAWC,EAAAA,KAClB,kBAAKjB,IACL,qBAAQM,IACR,oBAAOL,IACP,wBACE,kBAAQR,OAAM,MAAQS,EAAR,kBAAuCR,EAAAA,EAAAA,KAAYC,KAAK,gBACtE,eAAKd,IAAG,MAAQqB,EAAR,iBAAsCR,EAAAA,EAAAA,KAAYE,IAAI,OAEhE,QAAC,EAAD,OACA,kBAAQoB,UAAWC,EAAAA,IAAnB,UAEF,sBAAO,QAAC,IAAD,QACP,QAAC,IAAD,CACEC,gBAAe,YACfC,cAAe,iCACfC,YAAW,YACXC,UAAW,+BAEb,QAAC,IAAD","sources":["webpack://dev1studio/./src/components/utilities/youTube.js","webpack://dev1studio/./src/contents/20211218.mdx","webpack://dev1studio/./src/pages/20211218.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction YouTubeVideo({ VIDEO_ID }) {\n  return (\n    <iframe\n      width=\"560\" height=\"315\"\n      src={`https://www.youtube.com/embed/${VIDEO_ID}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  )\n}\n\nexport default YouTubeVideo\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport YouTubeVideo from '../components/utilities/youTube';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`한문은 와세이칸고 형태로 테스트했습니다.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`Next.js`}</inlineCode>{`로 예제를 작성했으니 염두하고 읽어주세요`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2>{`家.module.sass`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"sass\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`コンテナ\n  background-color: orange\n  padding: 1em\n  width: 7rem\n\n  .パラグラフ\n    font-size: .75rem\n    color: blue\n\n.見出し\n  font-size: 1rem\n  color: purple`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`index.js`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import styled from '@emotion/styled'\nimport スタイル from './家.module.sass'\n\nconst コンテナ = styled.div({\n  fontWeight: 'bolder',\n})\n\nfunction 家() {\n  return (\n    <コンテナ className={スタイル.コンテナ}>\n      <h1 className={スタイル.見出し}>こんにちは、ワールド。</h1>\n      <p className={スタイル.パラグラフ}>こんにちは、セサンさん！</p>\n    </コンテナ>\n  )\n}\n\nexport default 家`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`Result`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<div class=\"________2dZIs css-q0k6az\">\n  <h1 class=\"_______LOFBv\">こんにちは、ワールド。</h1>\n  <p class=\"_________ovE2p\">こんにちは、セサンさん！</p>\n</div>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`ndex.module.sass에서 家.module.sass 이렇게 파일명 앞자리도 non-english로 작업했더니 클래스 이름 모조리 언더스코어 처리됐습니다.`}</p>\n    <p>{`참고로 css-q0k6az는 emotion으로 작성된 부분입니다.`}</p>\n    <p>{`이전 글에서 설명했듯이, class=\"\"에서 마지막 부분이 랜덤 처리되었기 때문에 렌더링에는 문제가 전혀 없습니다.`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211218/result.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211218/result.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>결말</figcaption>\n    </figure>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p><em parentName=\"p\">{`이 글을 일본 사람들이 볼까?`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20211218'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = '일본의 `카나`를 React에서 이름으로 써보기'\n  const pageDateTime = '2021.12.18'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = '君の名前は？'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'react, css, sass, module, class, classname, kana, 리액트, 모듈, 클래스, 카나'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/result.jpeg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20211217`}\n        previousTitle={'class & className 이름을 한글로 지어보기'}\n        nextAddress={`/20211220`}\n        nextTitle={'React에서 오른쪽에서 왼쪽으로 개발하기?!'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["VIDEO_ID","width","height","src","title","allow","allowFullScreen","deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","srcSet","uuidv4","type","alt","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle","nextAddress","nextTitle"],"sourceRoot":""}