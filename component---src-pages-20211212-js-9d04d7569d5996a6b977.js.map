{"version":3,"file":"component---src-pages-20211212-js-9d04d7569d5996a6b977.js","mappings":"6RAWAA,EAAAA,EAAAA,KACO,IACDC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,+BACA,wDAA0C,cAAIC,WAAW,KAAf,WAC1C,8GACA,yCACA,kEACA,uBACF,wBACE,kBAAQC,OAAM,4BAA6BC,EAAAA,EAAAA,KAAYC,KAAK,gBAC5D,eAAKC,IAAG,4BAA6BF,EAAAA,EAAAA,KAAYG,IAAI,OAEvD,oCAEE,oBACA,4BACA,wBAAU,QAAC,IAAD,CAAYC,KAAK,2BAA2BP,QAAQ,cAApD,gBAAV,0BACA,iCACE,SAAY,SADd,gBAGQ,gBAAMC,WAAW,wBACrB,KAAQ,QADJ,qGAHR,eAOA,mEACA,wBAAU,sBAAYA,WAAW,KAAvB,gCAAV,qBAAuG,sBAAYA,WAAW,KAAvB,KAAvG,mBACA,4BACA,mDACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,0SAHR,eAaA,uCACA,kFACA,gDACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,8GAHR,eAQA,mCACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,uJAHR,eAYA,6DACA,8CACA,qCAAuB,sBAAYA,WAAW,KAAvB,OAAvB,MAA4E,sBAAYA,WAAW,KAAvB,QAA5E,eACA,qIACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,6CAHR,eASA,oEACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,8EAHR,eAWA,oBACA,+BACA,+DAKJJ,EAAWW,gBAAiB,E,4CC1D5B,MAlDA,WACE,IACMC,EAAY,oBACZC,EAAY,qCACZC,EAAe,aACfC,EAAiBD,EAAaE,QAAQ,MAAO,IAC7CC,EALW,uBAKiBF,EAC5BG,EAAW,iBAEjB,OACE,QAAC,IAAD,MACE,QAAC,EAAAC,UAAD,CACEC,MAAUP,EAAL,MAAoBD,EACzBS,YAAaH,EACbI,UAAWL,EACXM,SAAU,CAAC,CACTC,SAAU,WACVC,QAAS,mCAEXC,UAAW,CACTnB,KAAM,UACNa,MAAOR,EACPS,YAAaR,EACbc,IAAKV,EACLW,OAAQ,CAAC,CAAED,IAAKV,EAAc,uBAGlC,mBAASY,UAAWC,EAAAA,KAClB,kBAAKjB,IACL,qBAAQK,IACR,oBAAOJ,IACP,wBACE,kBAAQT,OAAM,IAAMU,EAAN,kBAAqCT,EAAAA,EAAAA,KAAYC,KAAK,gBACpE,eAAKC,IAAG,IAAMO,EAAN,iBAAoCT,EAAAA,EAAAA,KAAYG,IAAI,OAE9D,QAAC,EAAD,OACA,kBAAQoB,UAAWC,EAAAA,IAAnB,UAEF,sBAAO,QAAC,IAAD,QACP,QAAC,IAAD,CACEC,gBAAe,YACfC,cAAe,0DACfC,YAAW,YACXC,UAAW,yBAEb,QAAC,IAAD","sources":["webpack://dev1studio/./src/contents/20211212.mdx","webpack://dev1studio/./src/pages/20211212.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`얼마전 M1 MacBook Pro 13인치를 내돈내산했습니다. `}<em parentName=\"p\">{`FLEX!`}</em></p>\n    <p>{`M1 MacBook Pro 13인치를 구매하고 제일 먼저 설치한 건 iTerm과 Xcode 입니다. 그리고 iTerm으로 Homebrew 설치를 시도했습니다.`}</p>\n    <p>{`그런데 제대로 인식을 못하더라구요.`}</p>\n    <p>{`알고보니 터미널 창에서 추가 작업을 하라는 메시지가 있었는데요 없었습니다 (?)`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/20211212/question.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/20211212/question.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>뭐라고?</figcaption>\n    </figure>\n    <hr></hr>\n    <h2>{`설치 1차`}</h2>\n    <p>{`일단 `}<LinkButton href='https://brew.sh/index_ko' mdxType=\"LinkButton\">{`Homebrew 공식홈`}</LinkButton>{` 접속해서 안내된 방법으로 설치합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`여기까지는 Intel macOS, Apple Silicon macOS 동일합니다.`}</p>\n    <p>{`혹시 `}<inlineCode parentName=\"p\">{`Command Line Tools for Xcode`}</inlineCode>{` 설치할거냐고 프롬프트가 뜨면 `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{`키 눌러서 설치해 주세요.`}</p>\n    <h2>{`설치 2차`}</h2>\n    <p>{`설치가 끝나면 다음과 같은 메시지가 터미널에 뜹니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`==> Next steps:\n- Add Homebrew to your PATH in /Users/<USER_ID>/.zprofile:\n    echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> /Users/<USER_ID>/.zprofile\n    eval \"$(/opt/homebrew/bin/brew shellenv)\"\n- Run \\`brew help\\` to get started\n- Further documentation:\n    https://docs.brew.sh`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`사실 위 메시지가 포인트입니다.`}</p>\n    <p>{`O612는 이 메시지를 무시했습니다. 그래서 제대로 동작을 안했던 거였죠. 자기들은 이런 실수 하지 마세요.`}</p>\n    <p>{`위 메시지가 알려준대로 추가 명령을 입력합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ echo 'eval $(/opt/homebrew/bin/brew shellenv)' >> ~/.zprofile\n$ eval $(/opt/homebrew/bin/brew shellenv)`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`제대로 설치됐는지 확인`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ which brew\n/opt/homebrew/bin/brew\n\n$ brew --version\nHomebrew 3.3.4\nHomebrew/homebrew-core (git revision 446005a8fbb; last commit 2021-11-16)`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`설치된 위치가 제대로 뜨고 버전도 제대로 뜬다면 설치가 완료된 겁니다.`}</p>\n    <h2>{`Homebrew 이용해서 패키지 설치해보기`}</h2>\n    <p>{`패키지 설치도 제대로 되는지 `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`과 `}<inlineCode parentName=\"p\">{`wget`}</inlineCode>{`을 설치해 봅시다.`}</p>\n    <p>{`참고로, git은 macOS에 기본적으로 설치가 되어 있지만 오래된 버전이 설치되어 있고 wget은 Big Sur 이전 macOS에는 설치가 되어 있지만 Big Sur 부터는 포함이 안되어 있습니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ brew install git\n\n$ brew install wget`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`설치가 제대로 되어있는지 확인은 Homebrew 처럼 which로 확인하면 됩니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ which git\n/opt/homebrew/bin/git\n\n$ which wget\n/opt/homebrew/bin/wget`}</code>{`\n        `}</deckgo-highlight-code>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p>{`여러분은 저와 같은 삽질을 하지 않길 바라는 마음에서 포스팅해 보았습니다.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20211212'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = 'Apple Silicon macOS에 Homebrew 설치하기'\n  const pageDateTime = '2021.12.12'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const subTitle = 'Shall we beer?'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'macos, homebrew, brew, 맥os, 맥주'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: pageAddress + '/question.jpeg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20211211`}\n        previousTitle={'ReactJS와 React Native에서 emotion & styled-components 써보기'}\n        nextAddress={`/20211213`}\n        nextTitle={'`한글`로 변수 만들어도 동작할까?'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","srcSet","uuidv4","type","src","alt","href","isMDXComponent","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","subTitle","GatsbySeo","title","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle","nextAddress","nextTitle"],"sourceRoot":""}