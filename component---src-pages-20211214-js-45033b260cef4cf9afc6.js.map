{"version":3,"file":"component---src-pages-20211214-js-45033b260cef4cf9afc6.js","mappings":"2RAWAA,EAAAA,EAAAA,KACO,IACDC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,+BACA,mFACA,oBACA,mEACA,iCACE,SAAY,OADd,gBAGQ,gBAAMC,WAAW,wBACrB,KAAQ,QADJ,2HAHR,eAeA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,gPAHR,eAsBA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,yCAHR,eAOA,6BACA,oCACA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,uKAHR,eAmBA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,2FAHR,eAWA,4BACA,0BACA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,mVAHR,eA2BA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,wRAHR,eAwBA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,kEAHR,eAUA,yBACA,uBACF,wBACE,kBAAQC,OAAM,6BAA8BC,EAAAA,EAAAA,KAAYC,KAAK,gBAC7D,eAAKC,IAAG,6BAA8BF,EAAAA,EAAAA,KAAYG,IAAI,OAExD,0CAEE,oBACA,+BACA,6GAKJT,EAAWU,gBAAiB,E,4CCxH5B,MAnDA,WACE,IAAMC,EAAW,uBACXC,EAAY,oBACZC,EAAY,kBACZC,EAAe,aACfC,EAAiBD,EAAaE,QAAQ,MAAO,IAC7CC,EAAcN,EAAcI,EAC5BG,EAAYP,EAAc,KAAOI,EACjCI,EAAW,sBAEjB,OACE,QAAC,IAAD,MACE,QAAC,EAAAC,UAAD,CACEC,MAAUR,EAAL,MAAoBD,EACzBU,YAAaH,EACbI,UAAWN,EACXO,SAAU,CAAC,CACTC,SAAU,WACVC,QAAS,sDAEXC,UAAW,CACTpB,KAAM,UACNc,MAAOT,EACPU,YAAaT,EACbe,IAAKX,EACLY,OAAQ,CAAC,CAAED,IAAKV,EAAY,sBAGhC,mBAASY,UAAWC,EAAAA,KAClB,kBAAKlB,IACL,qBAAQM,IACR,oBAAOL,IACP,wBACE,kBAAQT,OAAM,MAAQU,EAAR,kBAAuCT,EAAAA,EAAAA,KAAYC,KAAK,gBACtE,eAAKC,IAAG,MAAQO,EAAR,iBAAsCT,EAAAA,EAAAA,KAAYG,IAAI,OAEhE,QAAC,EAAD,OACA,kBAAQqB,UAAWC,EAAAA,IAAnB,UAEF,sBAAO,QAAC,IAAD,QACP,QAAC,IAAD,CACEC,gBAAe,YACfC,cAAe,sBACfC,YAAW,YACXC,UAAW,2BAEb,QAAC,IAAD","sources":["webpack://dev1studio/./src/contents/20211214.mdx","webpack://dev1studio/./src/pages/20211214.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`지난 글에 이어서 이번에는 function, component 이름에 한글을 사용해도 되는지를 테스트해볼게요!`}</p>\n    <hr></hr>\n    <h2>{`export default function 테스트 (근데 한글 파일명을 곁들인)`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// components/한글_컴포넌트.jsx\n\nfunction 한글_컴포넌트() {\n  return (\n    <div>한글 알아요?</div>\n  )\n}\n\nexport default 한글_컴포넌트`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import styled from '@emotion/styled'\nimport 한글_컴포넌트 from '../components/한글_컴포넌트'\n\nconst 콘테이너 = styled.div({\n  display: 'flex',\n})\n\nfunction 홈() {\n  return (\n    <콘테이너>\n      <한글_컴포넌트 />\n    </콘테이너>\n  )\n}\n\nexport default 홈`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<div class=\"css-k008qs\">한글 알아요?</div>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`노 플라블럼!`}</p>\n    <h2>{`한글 변수로 값 받아오기`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`unction 한글_컴포넌트() {\n  let 텍스트 = '알아요'\n  \n  return (\n    <>\n      한글 알아요?\n      {' '}\n      <strong>{텍스트}</strong>\n    </>\n  )\n}\n\nexport default 한글_컴포넌트`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<div class=\"css-k008qs\">\n  \"한글 알아요?\"\n  <!-- -->\n  <strong>알아요</strong>\n</div>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`와우네...`}</p>\n    <h2>{`잡탕밥`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// components/한글_컴포넌트.jsx\n\nimport styled from '@emotion/styled'\n\nconst 한글_정의목록 = styled.dl({\n  display: 'flex',\n  '& dt, & dd': {\n    display: 'inline-flex',\n  },\n})\n\nfunction 한글_컴포넌트({ 타이틀, 디스크립션 }) {\n  return (\n    <한글_정의목록>\n      <dt>{타이틀}</dt>\n      <dd>{디스크립션}</dd>\n    </한글_정의목록>\n  )\n}\n\nexport default 한글_컴포넌트`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import styled from '@emotion/styled'\nimport 한글_컴포넌트 from '../components/한글_컴포넌트'\n\nconst 정의목록 = styled(한글_컴포넌트)()\n\nfunction 홈() {\n  let 타이틀값 = '이름'\n  let 디스크립션값 = 'O612'\n\n  return (\n    <정의목록\n      타이틀={타이틀값}\n      디스크립션={디스크립션값}\n    />\n  )\n}\n\nexport default 홈`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<dl class=\"css-6z5rvi\">\n  <dt>이름</dt>\n  <dd>O612</dd>\n</dl>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`어썸!`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211214/no-mean.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211214/no-mean.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>아이고 의미업ㅅㄸㅏ</figcaption>\n    </figure>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p>{`다음 포스팅은 디렉토리(폴더)명, 이미지 파일명 둘 다 한글로 만들고 그걸 object로 리스트를 만들어 관리를 해도 잘 돌아가는지 테스트 해볼 생각입니다.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20211214'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = '`한글`로 컴포넌트 만들기!'\n  const pageDateTime = '2021.12.14'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = 'Hangeul asinyagoyo!'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'react, function, component, hangul, 리액트, 컴포넌트, 한글'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/no-mean.jpeg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20211213`}\n        previousTitle={'`한글`로 변수 만들어도 동작할까?'}\n        nextAddress={`/20211215`}\n        nextTitle={'macOS Monterey 업그레이드!'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","srcSet","uuidv4","type","src","alt","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","title","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle","nextAddress","nextTitle"],"sourceRoot":""}