{"version":3,"file":"component---src-pages-20211222-js-88666ee1f6a693a4a8fc.js","mappings":"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","sources":["webpack://dev1studio/./src/components/utilities/youTube.js","webpack://dev1studio/./src/contents/20211222.mdx","webpack://dev1studio/./src/pages/20211222.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction YouTubeVideo({ VIDEO_ID }) {\n  return (\n    <iframe\n      width=\"560\" height=\"315\"\n      src={`https://www.youtube.com/embed/${VIDEO_ID}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  )\n}\n\nexport default YouTubeVideo\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport YouTubeVideo from '../components/utilities/youTube';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`Vanilla 환경에서 한글로 클래스명 짓기, JavaScript 변수명 짓기, Element 생성하기를 해보고 싶었습니다. 과연 잘 될까요?`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`어떠한 영향도 받는 상황이 연출되지 않게 Live Server 조차도 사용하지 않은 상태에서 테스트가 진행되었습니다.`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2>{`CSS & HTML`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"scss\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// index.css\n.콘테이너 {\n  font-size: 1.2rem;\n  font-weight: bolder;  \n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!DOCTYPE html>\n<html lang=\"ko-KR\">\n\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width\" />\n  <link rel=\"stylesheet\" href=\"./index.css\" type=\"text/css\" media=\"all\" />\n</head>\n\n<body>\n  <div class=\"콘테이너\">\n    헬로 월드\n  </div>\n</body>\n\n</html>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`아무 문제없이 렌더링이 이루어졌습니다.`}</p>\n    <p>{`React에서는 JavaScript로 그리기 때문에 클래스명이 다른 이름으로 변경이 되지만 여기서는 Vanilla 환경이기 때문에 어떠한 영향도 주지 않았습니다.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`class 이름은 첫 문자에 숫자 및 특수문자가 오면 안된다는 룰이 있습니다. 특수문자 중에서 사용 가능한 문자는 하이픈, 언더스코어 둘 뿐입니다.`}</p>\n      <p parentName=\"blockquote\">{`다만, 숫자는 앞 문자로만 사용이 불가능하고 앞을 제외한 어떤 곳에서든 사용이 가능합니다.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`id 이름 역시 class와 동일한 네이밍 룰을 가지고 있으며, id는 한 화면에 동일 이름으로 여러번 사용이 불가합니다. (unique selector)`}</p>\n      <p parentName=\"blockquote\">{`html에서의 id는 개발에서 사용하는 id처럼 index 역할도 하는데 이것을 생각해보면 한 페이지당 동일 이름 사용 불가하다는 게 왜 그런지 이해하실 수 있을거라 생각해요.`}</p>\n    </blockquote>\n    <h2>{`JavaScript`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"javascript\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`const 버튼 = document.createElement('button');\nconst 레이블 = document.createTextNode('눌러눌러');\n버튼.appendChild(레이블);\ndocument.body.appendChild(버튼);`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`위와 같이 작성하면`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<button>눌러눌러</button>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`이렇게 제대로 렌더링됩니다.`}</p>\n    <p>{`물론 소스보기 했을 때는 JavaScript 코드 형태로만 보실 수 있습니다. 이게 싫으면 `}<inlineCode parentName=\"p\">{`Next.js`}</inlineCode>{`처럼 `}<inlineCode parentName=\"p\">{`SSR`}</inlineCode>{` 지원하는 프레임워크를 사용하세요.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"javascript\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`const 버튼_컴포넌트 = document.createElement('버튼');\nconst 레이블_컴포넌트 = document.createTextNode('눌러눌러');\n버튼_컴포넌트.appendChild(레이블_컴포넌트);\n버튼_컴포넌트.setAttribute('type', 'button')\ndocument.body.appendChild(버튼_컴포넌트);`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`Element(태그)도 한글로 추가해보았는데 제대로 동작했습니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<버튼 type=\"button\">눌러눌러</버튼>`}</code>{`\n        `}</deckgo-highlight-code>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211222/naman.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211222/naman.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>잘 되는 걸 나만 몰랐구나... 그렇구나...</figcaption>\n    </figure>\n    <h2>{`라스트팡! 파일명 테스트`}</h2>\n    <p>{`마지막으로 파일명을 바꿔도 동작하는지 테스트 해보겠습니다.`}</p>\n    <p>{`Sass 경우에 자동으로 CSS 파일로 컴파일하는 과정이 있는데 이때 CSS 파일이 자동 생성되게 됩니다. 그래서 파일명 변경은 Sass에서 작업하면 CSS 파일도 정상적으로 인식하는지 자동으로 테스트가 가능할 겁니다.`}</p>\n    <p>{`여기서는 이미지 파일도 추가로 테스트 합니다. 테스트로 사용할 이미지는 이전에 사용한 적이 있는 곱창 이미지를 사용할 겁니다.`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211222/곱창.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211222/곱창.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>츄릅! 츄릅!</figcaption>\n    </figure>\n    <p>{`위 이미지는 실제로 한글로 이루어진 파일명을 사용하고 있습니다. `}<inlineCode parentName=\"p\">{`곱창.jpeg`}</inlineCode></p>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`dev1stud.io`}</inlineCode>{`에서는 이미지 최적화 차원에서 `}<inlineCode parentName=\"p\">{`.webp`}</inlineCode>{`와 `}<inlineCode parentName=\"p\">{`.jpeg`}</inlineCode>{`(.jpg)를 세트로 사용하고 있습니다.`}</p>\n      <p parentName=\"blockquote\">{`(썸네일에서는 `}<inlineCode parentName=\"p\">{`.webp`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`.png`}</inlineCode>{`를 세트로 사용)`}</p>\n    </blockquote>\n    <deckgo-highlight-code {...{\n      \"language\": \"sass\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// 인덱스.sass\n\n.콘테이너\n  font-size: 1.2rem\n  font-weight: bolder\n\n  .이미지\n    width: 200px\n    height: 200px\n    background: url('./곱창.jpg') no-repeat 50% 50%/contain`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!DOCTYPE html>\n<html lang=\"ko-KR\">\n\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width\" />\n  <link rel=\"stylesheet\" href=\"./인덱스.css\" type=\"text/css\" media=\"all\" />\n</head>\n\n<body>\n  <div class=\"콘테이너\">\n    헬로 월드\n    <div class=\"이미지\"></div>\n    <img src=\"./곱창.jpg\" alt=\"곱창\" />\n  </div>\n  <script>\n    const 버튼 = document.createElement('button');\n    const 레이블 = document.createTextNode('눌러눌러');\n    버튼.appendChild(레이블);\n    document.body.appendChild(버튼);\n  </script>\n</body>\n\n</html>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`결과는 성공!`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211222/howoo.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211222/howoo.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>호우!</figcaption>\n    </figure>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211222/rip-ie.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211222/rip-ie.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption><del>고전짤</del></figcaption>\n    </figure>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20211222'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = 'Vanilla 환경에서 한글로 뻘 코딩하기'\n  const pageDateTime = '2021.12.22'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = 'Vanilla HTML, Vanilla CSS, Vanilla JavaScript `한글`로 작성해보기'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'vanilla, html, css, javascript, js, 바닐라, 자바스크립트, 스타일'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/naman.jpeg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20211220`}\n        previousTitle={'React에서 오른쪽에서 왼쪽으로 개발하기?'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["VIDEO_ID","width","height","src","title","allow","allowFullScreen","deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","srcSet","uuidv4","type","alt","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle"],"sourceRoot":""}