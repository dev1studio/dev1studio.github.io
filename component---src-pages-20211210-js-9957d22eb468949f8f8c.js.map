{"version":3,"file":"component---src-pages-20211210-js-9957d22eb468949f8f8c.js","mappings":"mRAUAA,EAAAA,EAAAA,KACO,IACDC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,+BACA,wEACA,oBACA,4BACA,kHACA,iGACA,uBACF,wBACE,kBAAQC,OAAM,wBAAyBC,EAAAA,EAAAA,KAAYC,KAAK,gBACxD,eAAKC,IAAG,wBAAyBF,EAAAA,EAAAA,KAAYG,IAAI,OAEnD,qCAEE,oBACA,+BACA,6EACA,0BAAY,kBAAQC,WAAW,KAAnB,QAAZ,SAKJT,EAAWU,gBAAiB,E,4CCiB5B,MAlDA,WACE,IACMC,EAAY,oBACZC,EAAY,+CACZC,EAAe,aACfC,EAAiBD,EAAaE,QAAQ,MAAO,IAC7CC,EALW,uBAKiBF,EAC5BG,EAAW,0CAEjB,OACE,QAAC,IAAD,MACE,QAAC,EAAAC,UAAD,CACEC,MAAUP,EAAL,MAAoBD,EACzBS,YAAaH,EACbI,UAAWL,EACXM,SAAU,CAAC,CACTC,SAAU,WACVC,QAAS,+DAEXC,UAAW,CACTnB,KAAM,UACNa,MAAOR,EACPS,YAAaR,EACbc,IAAKV,EACLW,OAAQ,CAAC,CAAED,IAAKV,EAAc,kBAGlC,mBAASY,UAAWC,EAAAA,KAClB,kBAAKjB,IACL,qBAAQK,IACR,oBAAOJ,IACP,wBACE,kBAAQT,OAAM,IAAMU,EAAN,kBAAqCT,EAAAA,EAAAA,KAAYC,KAAK,gBACpE,eAAKC,IAAG,IAAMO,EAAN,iBAAoCT,EAAAA,EAAAA,KAAYG,IAAI,OAE9D,QAAC,EAAD,OACA,kBAAQoB,UAAWC,EAAAA,IAAnB,UAEF,sBAAO,QAAC,IAAD,QACP,QAAC,IAAD,CACEC,gBAAe,YACfC,cAAe,2BACfC,YAAW,YACXC,UAAW,6DAEb,QAAC,IAAD","sources":["webpack://dev1studio/./src/contents/20211210.mdx","webpack://dev1studio/./src/pages/20211210.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`JavaScript에서 변수명을 한글로 작성해도 동작할까? 하는 상상에서 시작된 글입니다.`}</p>\n    <hr></hr>\n    <h2>{`개발 환경`}</h2>\n    <p>{`React 환경에서 다양한 인간 언어(human language)로 변수를 만들고 Vanila 환경(생코딩)에서도 변수를 만들어서 동작하는지를 테스트해 볼 것입니다.`}</p>\n    <p>{`그리고 스타일 코드도 궁금하니 동일 환경에서 Sass 코드 및 Emotion Styled 변수를 만들어서 테스트를 진행 할 생각입니다.`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/20211210/fire.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/20211210/fire.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>불타오르네</figcaption>\n    </figure>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p>{`이번 글에서는 어떻게 진행할지에 대해서만 언급했고, 본격적인 테스트 진행은 다음 글에서 이어집니다.`}</p>\n    <p>{`다음 글 `}<strong parentName=\"p\">{`관많부!`}</strong>{` : )`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20211210'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = '한글이나 히라가나 등의 non-English 언어로 변수명을 작명해도 동작할까?'\n  const pageDateTime = '2021.12.10'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const subTitle = 'development language VS. human language'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'language, react, non-english, const, function, 언어, 리액트, 변수'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: pageAddress + '/cat.jpeg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20211207`}\n        previousTitle={'emotion vs. Sass 승자는?!..'}\n        nextAddress={`/20211211`}\n        nextTitle={'ReactJS와 React Native에서 emotion & styled-components 써보기'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","srcSet","uuidv4","type","src","alt","parentName","isMDXComponent","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","subTitle","GatsbySeo","title","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle","nextAddress","nextTitle"],"sourceRoot":""}