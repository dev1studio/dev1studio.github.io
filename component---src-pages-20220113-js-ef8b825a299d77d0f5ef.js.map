{"version":3,"file":"component---src-pages-20220113-js-ef8b825a299d77d0f5ef.js","mappings":"oIAaA,IAXA,YAAgD,IAAlBA,EAAiB,EAAjBA,cAC5B,OACE,kBACEC,IAAG,iDAAmDD,EAAnD,sDACHE,MAAK,GAAKF,EACVG,MAAM,qJACNC,QAAQ,+F,2CCMd,IAZA,YAAqC,IAAbC,EAAY,EAAZA,SACtB,OACE,kBACEC,MAAM,MAAMC,OAAO,MACnBN,IAAG,iCAAmCI,EACtCH,MAAM,uBACNC,MAAM,2FACNK,iBAAiB,M,kNCIvBC,EAAAA,EAAAA,KACO,IACDC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,+BACA,4EACA,mCAAqB,kBAAQC,WAAW,KAAnB,MAArB,eAA0E,kBAAQA,WAAW,KAAnB,OAA1E,4BAA6I,kBAAQA,WAAW,KAAnB,MAA7I,UACA,oBACA,wCACA,+BAAiB,sBAAYA,WAAW,KAAvB,SAAjB,gBACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,8GAHR,eAaA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,wKAHR,eAiBA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,8IAHR,eAcA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,2LAHR,eAkBA,2CACA,6CAA+B,sBAAYA,WAAW,KAAvB,WAA/B,mCAAqH,sBAAYA,WAAW,KAAvB,SAArH,uBACA,iCACA,iCACE,SAAY,cADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,iPAHR,eAkBA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,iFAHR,eAUA,+BACA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,gJAHR,eAgBA,gCACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,uFAHR,eAaA,6BACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,mLAHR,eAkBA,gCACA,yDACA,2BACE,aAAGA,WAAW,cAAd,8CAAyE,sBAAYA,WAAW,KAAvB,OAAzE,WAEF,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,kHAHR,eAcA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,oEAHR,eAQA,iCACE,SAAY,cADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,iNAHR,eAgBA,sEACA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,0NAHR,eAqBA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,kGAHR,eAYA,2CACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,wJAHR,eAaA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,oDAHR,eAQA,2BACE,aAAGA,WAAW,cAAd,+GACA,aAAGA,WAAW,cAAd,iCAA4D,sBAAYA,WAAW,KAAvB,YAA5D,MAAsH,sBAAYA,WAAW,KAAvB,YAAtH,iBAEF,6CAA+B,sBAAYA,WAAW,KAAvB,YAA/B,gBACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,0SAHR,eAsBA,gDACA,iCACA,iCACE,SAAY,cADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,+PAHR,eAoBA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,oJAHR,eAUA,+BACA,iCACE,SAAY,OADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,gVAHR,eAwBA,gCACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,kMAHR,eAiBA,6BACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,+UAHR,eA0BA,mDACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,mCAHR,eAOA,qCAAuB,sBAAYA,WAAW,KAAvB,QAAvB,MAA6E,sBAAYA,WAAW,KAAvB,SAA7E,YACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,oCAHR,eAOA,uBACF,wBACE,kBAAQC,OAAM,+BAAgCC,EAAAA,EAAAA,KAAYC,KAAK,gBAC/D,eAAKlB,IAAG,8BAA+BiB,EAAAA,EAAAA,KAAYE,IAAI,OAEzD,uCAEE,oBACA,+BACA,qGACA,yCAA2B,cAAIJ,WAAW,KAAf,cAC3B,6EACA,uBACF,wBACE,kBAAQC,OAAM,0BAA2BC,EAAAA,EAAAA,KAAYC,KAAK,gBAC1D,eAAKlB,IAAG,yBAA0BiB,EAAAA,EAAAA,KAAYE,IAAI,OAEpD,2BAAY,oCAMdR,EAAWS,gBAAiB,E,4CC5X5B,MAnDA,WACE,IAAMC,EAAW,uBACXC,EAAY,oBACZC,EAAY,+CACZC,EAAe,aACfC,EAAiBD,EAAaE,QAAQ,MAAO,IAC7CC,EAAcN,EAAcI,EAC5BG,EAAYP,EAAc,KAAOI,EACjCI,EAAW,0CAEjB,OACE,QAAC,IAAD,MACE,QAAC,EAAAC,UAAD,CACE7B,MAAUsB,EAAL,MAAoBD,EACzBS,YAAaF,EACbG,UAAWL,EACXM,SAAU,CAAC,CACTC,SAAU,WACVC,QAAS,wDAEXC,UAAW,CACTlB,KAAM,UACNjB,MAAOqB,EACPS,YAAaR,EACbc,IAAKV,EACLW,OAAQ,CAAC,CAAED,IAAKT,EAAY,kBAGhC,mBAASW,UAAWC,EAAAA,KAClB,kBAAKjB,IACL,qBAAQM,IACR,oBAAOL,IACP,wBACE,kBAAQR,OAAM,MAAQS,EAAR,kBAAuCR,EAAAA,EAAAA,KAAYC,KAAK,gBACtE,eAAKlB,IAAG,MAAQyB,EAAR,iBAAsCR,EAAAA,EAAAA,KAAYE,IAAI,OAEhE,QAAC,EAAD,OACA,kBAAQoB,UAAWC,EAAAA,IAAnB,UAEF,sBAAO,QAAC,IAAD,QACP,QAAC,IAAD,CACEC,gBAAe,YACfC,cAAe,0CACfC,YAAW,YACXC,UAAW,+CAEb,QAAC,IAAD","sources":["webpack://dev1studio/./src/components/utilities/codeSandbox.js","webpack://dev1studio/./src/components/utilities/youTube.js","webpack://dev1studio/./src/contents/20220113.mdx","webpack://dev1studio/./src/pages/20220113.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction CodeSandboxPreview({ SENDBOX_TITLE }) {\n  return (\n    <iframe\n      src={`https://codesandbox.io/embed/github/naninyang/${SENDBOX_TITLE}/tree/main/?fontsize=14&hidenavigation=1&theme=dark`}\n      title={`${SENDBOX_TITLE}`}\n      allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n    />\n  )\n}\n\nexport default CodeSandboxPreview\n","import * as React from \"react\"\n\nfunction YouTubeVideo({ VIDEO_ID }) {\n  return (\n    <iframe\n      width=\"560\" height=\"315\"\n      src={`https://www.youtube.com/embed/${VIDEO_ID}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  )\n}\n\nexport default YouTubeVideo\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport YouTubeVideo from '../components/utilities/youTube';\nimport CodeSandboxPreview from '../components/utilities/codeSandbox';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`Angular, React, Svelte, 그리고 Vue로는 어떻게 개발할까요? CSS 작업은요?`}</p>\n    <p>{`4가지 프레임워크 모두를 `}<strong parentName=\"p\">{`찍먹`}</strong>{`하기 위해서는 일단 `}<strong parentName=\"p\">{`집중력`}</strong>{`이 필요합니다. 글이 약간 긴 관계로 집중 `}<strong parentName=\"p\">{`빡!`}</strong>{` 해주세요`}</p>\n    <hr></hr>\n    <h2>{`변수없이 '헬로 월드' 보여주기`}</h2>\n    <p>{`개발의 기본이죠. `}<inlineCode parentName=\"p\">{`헬로 월드`}</inlineCode>{`를 화면에 뿌려보기.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!-- HTML -->\n<head>\n  <title>헬로 월드</title>\n</head>\n<body>\n  <main><p>헬로 월드</p></main>\n</body>`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// React with Next.js\nfunction Home() {\n  return (\n    <main>\n      <Head>\n        <title>헬로 월드</title>\n      </Head>\n      <p>헬로 월드</p>\n    </main>\n  )\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!-- Svelte -->\n<svelte:head>\n  <title>헬로 월드</title>\n</svelte:head>\n\n<svelte:body>\n  <main><p>헬로 월드</p></main>\n</svelte:body>`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!-- Vue with Nuxt -->\n<template>\n  <main><p>헬로 월드</p></main>\n</template>\n\n<script>\n  export default {\n    head: () => ({\n      title: '헬로 월드',\n    }),\n  }\n</script>`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`변수로 지정한 '헬로 월드' 보여주기`}</h2>\n    <p>{`Angular와 Vue는 변수를 불러올 때 `}<inlineCode parentName=\"p\">{`{{...}}`}</inlineCode>{` 처럼 괄호를 2번 써야하고 React와 Svelte는 `}<inlineCode parentName=\"p\">{`{...}`}</inlineCode>{` 처럼 괄호를 1번만 사용합니다.`}</p>\n    <p>{`If, Angular`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"typescript\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// app/app.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-hello',\n  templateUrl: 'src/app/app.component.html'\n})\nexport class AppComponent {\n  constructor() {}\n\n  world: string = '월드';\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!-- app/app.component.html -->\n<div>\n  <p>헬로 {{ world }}</p>\n</div>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If, React`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`function AppHello() {\n  const world = '월드'\n  return (\n    <div>\n      <p>헬로 { world }</p>\n    </div>\n  )\n}\n\nexport default AppHello`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If, Svelte`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<script>\n  const world = '월드';\n</script>\n\n<div>\n  <p>헬로 { world }</p>\n</div>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If. Vue`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<div id=\"app-hello\">\n  <p>헬로 {{ world }}</p>\n</div>\n\n<script>\n  var appHello = new Vue({\n    el: '#app-hello',\n    data: {\n      world: '훨드'\n    }\n  })\n</script>`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`컴포넌트 작성하기`}</h2>\n    <p>{`Angular는 TypeScript를 사용하여 작성해야 합니다.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Component를 불러오는 파일은 html 형식이고, Component만 `}<inlineCode parentName=\"p\">{`.ts`}</inlineCode>{` 입니다.`}</p>\n    </blockquote>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!-- index.html -->\n<head>\n  <title>헬로 월드</title>\n</head>\n\n<body>\n  <app-root></app-root>\n</body>`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!-- app/app.component.html -->\n<main><p>헬로 월드</p></main>`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"typescript\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// app/app.components.ts\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\"\n})\nexport class RootComponent {\n  title = \"헬로 월드\";\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`React는 하나의 파일에 넣을 수도, component를 따로 분리할 수도 있습니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import Bibimbap from './bibimbap'\n\nconst Gopchang = <p>곱창 먹고싶다</p>\n\nfunction Home() {\n  return (\n    <>\n      <h1>배고픈 O612</h1>\n      <Gopchang />\n      <Bibimbap />\n    </>\n  )\n}\n\nexport default Home`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// bibimbap.js\nfunction Bibimbap() {\n  return <p>비빔밥도 먹고싶다</p>\n}\n\nexport default Bibimbap`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`Svelte는 React와 비슷합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<script>\n  import Bibimbap from './bibimbap.svelte';\n  const Gopchang = <p>곱창 먹고싶다</p>\n</script>\n\n<Gopchang></Gopchang>\n<Bibimbap></Bibimbap>`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!-- bibimbap.svelte -->\n<p>비빔밥도 먹고싶다</p>`}</code>{`\n        `}</deckgo-highlight-code>\n    <blockquote>\n      <p parentName=\"blockquote\">{`React는 component, fragment의 chidren에 string, text 등이 없을 때 html의 short tag처럼 짧게 쓸 수 있고 Svelte는 짧게 쓸 수 없습니다.`}</p>\n      <p parentName=\"blockquote\">{`예제로 보여드린 React와 Svelte에서 사용한 `}<inlineCode parentName=\"p\">{`Gopchang`}</inlineCode>{`과 `}<inlineCode parentName=\"p\">{`Bibimbap`}</inlineCode>{` 코드를 참고하세요.`}</p>\n    </blockquote>\n    <p>{`Vue는 component 안에 html은 `}<inlineCode parentName=\"p\">{`template`}</inlineCode>{`를 사용해야 합니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<div id=\"app\">\n  <p>곱창 먹고싶다</p>\n  <bibimbap />\n</div>\n<script type=\"text/javascript\">\n  var bibimbap = Vue.component(\"bibimbap\", {\n    template: \\`<p>비빔밥도 먹고싶다</p>\\`,\n  });\n\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n      message: \"헬로 월드! index.html\"\n    }\n  });\n</script>`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`버튼을 누르면 카운트 올라가는 예제 만들어보기`}</h2>\n    <p>{`If, Angular`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"typescript\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`// app/app.component.ts\nimport { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n})\nexport class AppComponent {\n  count: number = 1;\n\n  handleClick() {\n    this.count++;\n  }\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<!-- app/app.component.html -->\n<button (click)=\"handleClick()\">\n  Clicked {{ count }} {{ count === 1 ? 'time' : 'times' }}\n</button>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If, React`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import { useState } from 'react'\n\n// function App() {\nconst App = () => {\n  const [count, setCount] = useState(1);\n\n  const handleClick = () => {\n    setCount(count + 1)\n  }\n\n  return (\n    <button onClick={handleClick}>\n      Clicked {count} {count === 1 ? 'time' : 'times'\n    </button>\n  )\n};\n\nexport default App`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If, Svelte`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<script>\n  const count = 1;\n\n  function handleClick() {\n    count += 1;\n  }\n</script>\n\n<button on:click={handleClick}>\n  Clicked {count} {count === 1 ? 'time' : 'times'}\n</button>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If, Vue`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<template>\n  <button @click=\"handleClick\">\n    Clicked {{ count }} {{ count === 1 ? 'time' : 'times' }}\n  </button>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        count: 1;\n      };\n    },\n    methods: {\n      handleClick() {\n        this.count += 1;\n      }\n    }\n  };\n</script>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`실행시 브라우저에서는 다음과 같이 코드가 생성됩니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<button>Clicked 1 time</button>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`버튼을 누르면 숫자가 바뀌고 `}<inlineCode parentName=\"p\">{`time`}</inlineCode>{`이 `}<inlineCode parentName=\"p\">{`times`}</inlineCode>{`로 바뀝니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<button>Clicked 2 times</button>`}</code>{`\n        `}</deckgo-highlight-code>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20220113/scrolling.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20220113/scrolling.jpg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>스크롤의 압박</figcaption>\n    </figure>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p>{`이번 글은 이전에 포스타입에 올렸던 내용들을 하나로 합하고 필요없는 내용은 빼고 있어야 하는 내용이 빠진 경우에는 추가해서 취합한 내용입니다.`}</p>\n    <p>{`그래서 스크롤이 다소 길어졌습니다. `}<em parentName=\"p\">{`(대국민 사과)`}</em></p>\n    <p>{`다음 글에서는 이 프레임워크들을 이용해 스타일링 및 CSS 작성하는 방법에 대해 써볼게요. 안녕~!`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20220113/mazm.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20220113/mazm.jpg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption><del>(어떻게 알았지?)</del></figcaption>\n    </figure>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20220113'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = 'Angular, React, Svelte 그리고 Vue를 이용해 개발 찍먹해보기'\n  const pageDateTime = '2022.01.13'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = 'Angular, React, Svelte, Vue Programming'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'angular, react, svelte, vue, 앵귤러, 리액트, 스벨트, 뷰, 개발하기'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/mazm.jpg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20220112`}\n        previousTitle={'Angular, React, Svelte 그리고 Vue를 시작해볼까요?'}\n        nextAddress={`/20220204`}\n        nextTitle={'Angular, React, Svelte 그리고 Vue로 스타일링 해볼까?'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["SENDBOX_TITLE","src","title","allow","sandbox","VIDEO_ID","width","height","allowFullScreen","deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","srcSet","uuidv4","type","alt","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle","nextAddress","nextTitle"],"sourceRoot":""}