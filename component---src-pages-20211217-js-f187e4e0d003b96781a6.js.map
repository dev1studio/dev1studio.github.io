{"version":3,"file":"component---src-pages-20211217-js-f187e4e0d003b96781a6.js","mappings":"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","sources":["webpack://dev1studio/./src/components/utilities/youTube.js","webpack://dev1studio/./src/contents/20211217.mdx","webpack://dev1studio/./src/pages/20211217.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction YouTubeVideo({ VIDEO_ID }) {\n  return (\n    <iframe\n      width=\"560\" height=\"315\"\n      src={`https://www.youtube.com/embed/${VIDEO_ID}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  )\n}\n\nexport default YouTubeVideo\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport YouTubeVideo from '../components/utilities/youTube';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <figure>\n  <YouTubeVideo VIDEO_ID={'aEZ-CiML1pA'} mdxType=\"YouTubeVideo\" />\n  <figcaption>클래스 이름이 뭐예요? <del>(나 쉬운 클래스 아니예요)</del></figcaption>\n    </figure>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`Next.js`}</inlineCode>{`로 예제를 작성했으니 염두하고 읽어주세요`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2>{`CSS (CSS Module 말고 그냥 CSS)`}</h2>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211217/css-error.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211217/css-error.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>Global CSS를 사용하라는 에러가 뜸</figcaption>\n    </figure>\n    <p>{`CSS Module(`}<inlineCode parentName=\"p\">{`.module.css`}</inlineCode>{`)이 아닌 CSS(`}<inlineCode parentName=\"p\">{`.css`}</inlineCode>{`)를 생성해서 사용하려고 하면 에러가 뜹니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`Next.js`}</inlineCode>{`에서는 `}<inlineCode parentName=\"p\">{`global.css`}</inlineCode>{`(또는 global.sass)를 제외한 CSS 파일은 지원하지 않기 때문에 에러가 뜨는 것입니다.`}</p>\n    <p>{`그래서 단순 CSS 파일은 한글로 작성하든, 영문으로 작성하든, 어떤 형태든 위처럼 에러가 뜨는 것을 확인할 수 있습니다.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`global.css`}</inlineCode>{`를 `}<inlineCode parentName=\"p\">{`글로벌.css`}</inlineCode>{` 처럼 non-English 형태로 작성하고 `}<inlineCode parentName=\"p\">{`_app.js`}</inlineCode>{`에서 `}<inlineCode parentName=\"p\">{`global.css`}</inlineCode>{` 대신 `}<inlineCode parentName=\"p\">{`글로벌.css`}</inlineCode>{`로 임포트를 해서 사용하는 것은 아무런 문제가 없습니다.`}</p>\n    </blockquote>\n    <deckgo-highlight-code {...{\n      \"language\": \"scss\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`/* styles/글로벌.css */\n.헬로월드 {\n  color: pink;\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<div className='헬로월드'>헬로월드</div>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`모던 브라우저라면 utf-8 지원하기 때문에 특별한 이상없이 다음과 같이 렌더링됩니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<div class=\"헬로월드\">헬로월드</div>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`지정한 컬러인 핑크로도 제대로 동작합니다.`}</p>\n    <h2>{`CSS Module`}</h2>\n    <p>{`이제 우리가 궁금한 CSS Module 형태에서 Class 이름이 어떻게 적용되는지 알아보도록 해요!`}</p>\n    <p>{`CSS는 솔직히 별로 안 궁금했잖아요. (...)`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"scss\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`.콘테이너 {\n  background-color: orange;\n  padding: 1em;\n  width: 7rem;\n  font-size: 1rem;\n  color: purple;\n}`}</code>{`\n        `}</deckgo-highlight-code>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import styles from './index.module.css'\n\nfunction 홈() {\n  return (\n    <div className={styles.콘테이너}>\n      헬로 월드\n    </div>\n  )\n}\n\nexport default 홈`}</code>{`\n        `}</deckgo-highlight-code>\n    <blockquote>\n      <p parentName=\"blockquote\">{`className에 하이픈(-)을 넣고 싶으면 `}<inlineCode parentName=\"p\">{`{styles['부모-자식']}`}</inlineCode>{` 이렇게 `}<inlineCode parentName=\"p\">{`['']`}</inlineCode>{` 부호로 class를 감싸면 됩니다.`}</p>\n    </blockquote>\n    <p>{`결과.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<div class=\"index_______b99_u\">헬로 월드</div>`}</code>{`\n        `}</deckgo-highlight-code>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211217/nunal.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211217/nunal.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>??!?</figcaption>\n    </figure>\n    <p>{`non-English로 이름을 지으면 언더스코어(_)로 변환이 됩니다.`}</p>\n    <p>{`클래스 뒷쪽이 랜덤으로 생성되기 때문에 렌더링은 정상적으로 되기 때문에 사용하는데는 지장은 없습니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`.콘테이너`}</inlineCode>{`에 넣어둔 Property와 Value는 정상 동작해요.`}</p>\n    <h2>{`'import styled'를 'import 스타일드'로 변경`}</h2>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`import 스타일드 from '@emotion/styled'\n\nconst Container = 스타일드.main({\n  fontWeight: 'bolder',\n})\n\nfunction Home() {\n  return <Container>styled 변경 테스트</Container>\n}\n\nexport default Home`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`이렇게 코드를 작성했는데 이상한 부분은 발견이 되지 않았습니다.`}</p>\n    <p>{`그래서 `}<inlineCode parentName=\"p\">{`Home()`}</inlineCode>{`을 `}<inlineCode parentName=\"p\">{`홈()`}</inlineCode>{`으로 추가로 변경했는데 이 역시 문제는 없었어요.`}</p>\n    <p>{`여기서 가상 DOM인 `}<inlineCode parentName=\"p\">{`Container`}</inlineCode>{`를 `}<inlineCode parentName=\"p\">{`콘테이너`}</inlineCode>{`로 변경해봤는데 여기서도 문제는 없었습니다.`}</p>\n    <p>{`위에서 이미 진행한 className을 한글로 지정하는 것도 추가로 진행했고 이상 없음.`}</p>\n    <p>{`마지막으로 CSS Module 파일명도 한글로 바꿨습니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"jsx\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`error - uncaughtException: TypeError: Cannot read properties of undefined (reading 'updateHash')`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`그러자 위 같은 에러가 뜹니다.`}</p>\n    <p><inlineCode parentName=\"p\">{`styled`}</inlineCode>{`를 `}<inlineCode parentName=\"p\">{`스타일드`}</inlineCode>{`로 바꾸거나 CSS Module 파일명을 한글로 바꾸거나 둘 중 하나만 했을 때는 에러가 없었는데 둘 다 한글로 바꾸니 에러가 떴습니다.`}</p>\n    <p>{`이렇게 변태적으로 코딩하는 경우가 없어서 그런지 아무리 구글과 스택오버플로우 사이트를 뒤져도 해결하는 방법이 나오진 않았습니다.`}</p>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20211217/koseuk.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20211217/koseuk.jpeg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>...드디어 찾.았.다.</figcaption>\n    </figure>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p>{`한가지 주의할 점은 git 관리시 파일명 인코딩이 깨질 수 있으니 터미널에서 다음 명령어를 내려줄 필요가 있습니다. (물론 이렇게 코딩할 사람은 없을 거라고 생각하지만...)`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`$ git config --global core.quotepath false`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`그리고 macOS, Linux, Windows는 각각 파일명 및 디렉토리명 인코딩 처리 방법이 다르므로 여러 협업자가 서로 다른 운영체제에서 개발 중이라면 파일명 관련해서 어떤 이슈가 발생할지 장담할 수 없습니다.`}</p>\n    <p>{`파일명과 디렉토리명 만큼은 OS를 통일하던가, 영문으로만 관리하던가 둘 중 하나를 택하길 바라요.`}</p>\n    <p>{`한글로 뻘짓하기는 여기서 마무리하고 다음에는 다양한 non-English 글자들로 테스트 해보겠습니다!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20211217'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = 'class & className 이름을 한글로 지어보기'\n  const pageDateTime = '2021.12.17'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = 'Ireumi mwoyeyo? 와춰네임!'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'react, css, sass, module, class, classname, hangul, 리액트, 모듈, 클래스, 한글'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/koseuk.jpeg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20211216`}\n        previousTitle={'디렉토리명과 이미지 파일명을 한글로 지정하면 어떻게 될까?'}\n        nextAddress={`/20211218`}\n        nextTitle={'일본의 `카나`를 React에서 이름으로 써보기'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["VIDEO_ID","width","height","src","title","allow","allowFullScreen","deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","srcSet","uuidv4","type","alt","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle","nextAddress","nextTitle"],"sourceRoot":""}