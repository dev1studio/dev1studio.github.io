{"version":3,"file":"component---src-pages-20220227-js-8d5f67fb16a5764c93e6.js","mappings":"oIAaA,IAXA,YAAgD,IAAlBA,EAAiB,EAAjBA,cAC5B,OACE,kBACEC,IAAG,iDAAmDD,EAAnD,sDACHE,MAAK,GAAKF,EACVG,MAAM,qJACNC,QAAQ,+F,2CCMd,IAZA,YAAqC,IAAbC,EAAY,EAAZA,SACtB,OACE,kBACEC,MAAM,MAAMC,OAAO,MACnBN,IAAG,iCAAmCI,EACtCH,MAAM,uBACNC,MAAM,2FACNK,iBAAiB,M,kNCIvBC,EAAAA,EAAAA,KACO,IACDC,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,+BACA,mIACA,gEACA,2BACE,aAAGC,WAAW,cAAd,4EACA,aAAGA,WAAW,cAAd,wEACA,aAAGA,WAAW,cAAd,oDAEF,uBACF,wBACE,kBAAQC,OAAM,sCAAuCC,EAAAA,EAAAA,KAAYC,KAAK,gBACtE,eAAKlB,IAAG,qCAAsCiB,EAAAA,EAAAA,KAAYE,IAAI,OAEhE,mDAEE,oBACA,qCACA,2CACA,iCACE,SAAY,SADd,gBAGQ,gBAAMJ,WAAW,wBACrB,KAAQ,QADJ,0TAHR,eAaA,iCACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,4HAHR,eAeA,mCACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,sKAHR,eAiBA,8BACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,+IAHR,eAeA,qCACA,2BACE,aAAGA,WAAW,cAAd,UAAqC,sBAAYA,WAAW,KAAvB,qBAArC,eAEF,iCACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,uQAHR,eAqBA,2CAA6B,sBAAYA,WAAW,KAAvB,WAA7B,6BAA6G,sBAAYA,WAAW,KAAvB,eAA7G,kBACA,iCAAmB,sBAAYA,WAAW,KAAvB,YAAnB,MAA6E,sBAAYA,WAAW,KAAvB,UAA7E,sEACA,8BAAgB,sBAAYA,WAAW,KAAvB,UAAhB,YAA8E,sBAAYA,WAAW,KAAvB,gBAA9E,+CAAqL,sBAAYA,WAAW,KAAvB,aAArL,yBACA,8DAAgD,sBAAYA,WAAW,KAAvB,uBAAhD,aACA,mCACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,2mBAHR,eAoCA,4CAA8B,sBAAYA,WAAW,KAAvB,YAA9B,QAA0F,sBAAYA,WAAW,KAAvB,SAA1F,eACA,6GAA+F,sBAAYA,WAAW,KAAvB,iBAA/F,MAA8J,sBAAYA,WAAW,KAAvB,mBAC9J,kBAAG,sBAAYA,WAAW,KAAvB,mBAAH,uFACA,8DAAgD,sBAAYA,WAAW,KAAvB,YAAhD,oBACA,mDAAqC,sBAAYA,WAAW,KAAvB,OAArC,eACA,8BACA,iCACE,SAAY,SADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,0RAHR,eAsBA,kCAAoB,sBAAYA,WAAW,KAAvB,QAApB,oBACA,uCAAyB,sBAAYA,WAAW,KAAvB,mBAAzB,iBACA,iCAAmB,sBAAYA,WAAW,KAAvB,UAAnB,yBAA8F,sBAAYA,WAAW,KAAvB,eAA9F,eACA,wEACA,iCACE,SAAY,QADd,gBAGQ,gBAAMA,WAAW,wBACrB,KAAQ,QADJ,0CAHR,eASA,mCAAqB,sBAAYA,WAAW,KAAvB,4BAArB,aACA,oBACA,+BACA,+DACA,oEACA,wCAA0B,kBAAQA,WAAW,KAAnB,YAC1B,uBACF,wBACE,kBAAQC,OAAM,+BAAgCC,EAAAA,EAAAA,KAAYC,KAAK,gBAC/D,eAAKlB,IAAG,8BAA+BiB,EAAAA,EAAAA,KAAYE,IAAI,OAEzD,wCAMFR,EAAWS,gBAAiB,E,4CC5K5B,MAjDA,WACE,IAAMC,EAAW,uBACXC,EAAY,oBACZC,EAAY,qDACZC,EAAe,aACfC,EAAiBD,EAAaE,QAAQ,MAAO,IAC7CC,EAAcN,EAAcI,EAC5BG,EAAYP,EAAc,KAAOI,EACjCI,EAAW,sDAEjB,OACE,QAAC,IAAD,MACE,QAAC,EAAAC,UAAD,CACE7B,MAAUsB,EAAL,MAAoBD,EACzBS,YAAaF,EACbG,UAAWL,EACXM,SAAU,CAAC,CACTC,SAAU,WACVC,QAAS,+GAEXC,UAAW,CACTlB,KAAM,UACNjB,MAAOqB,EACPS,YAAaR,EACbc,IAAKV,EACLW,OAAQ,CAAC,CAAED,IAAKT,EAAY,uBAGhC,mBAASW,UAAWC,EAAAA,KAClB,kBAAKjB,IACL,qBAAQM,IACR,oBAAOL,IACP,wBACE,kBAAQR,OAAM,MAAQS,EAAR,kBAAuCR,EAAAA,EAAAA,KAAYC,KAAK,gBACtE,eAAKlB,IAAG,MAAQyB,EAAR,iBAAsCR,EAAAA,EAAAA,KAAYE,IAAI,OAEhE,QAAC,EAAD,OACA,kBAAQoB,UAAWC,EAAAA,IAAnB,UAEF,sBAAO,QAAC,IAAD,QACP,QAAC,IAAD,CACEC,gBAAe,YACfC,cAAe,+CAEjB,QAAC,IAAD","sources":["webpack://dev1studio/./src/components/utilities/codeSandbox.js","webpack://dev1studio/./src/components/utilities/youTube.js","webpack://dev1studio/./src/contents/20220227.mdx","webpack://dev1studio/./src/pages/20220227.js"],"sourcesContent":["import * as React from \"react\"\n\nfunction CodeSandboxPreview({ SENDBOX_TITLE }) {\n  return (\n    <iframe\n      src={`https://codesandbox.io/embed/github/naninyang/${SENDBOX_TITLE}/tree/main/?fontsize=14&hidenavigation=1&theme=dark`}\n      title={`${SENDBOX_TITLE}`}\n      allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n    />\n  )\n}\n\nexport default CodeSandboxPreview\n","import * as React from \"react\"\n\nfunction YouTubeVideo({ VIDEO_ID }) {\n  return (\n    <iframe\n      width=\"560\" height=\"315\"\n      src={`https://www.youtube.com/embed/${VIDEO_ID}`}\n      title=\"YouTube video player\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen={true}\n    />\n  )\n}\n\nexport default YouTubeVideo\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { v4 as uuidv4 } from 'uuid';\nimport YouTubeVideo from '../components/utilities/youTube';\nimport CodeSandboxPreview from '../components/utilities/codeSandbox';\nimport LinkButton from '../components/utilities/linkButton';\nimport \"@deckdeckgo/highlight-code\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\ndeckDeckGoHighlightElement();\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2>{`Prologue`}</h2>\n    <p>{`CSR 방식으로 동작하는 Angular, React, 그리고 Vue는 여기에 언급한 Angular Universal, Next.js 그리고 Nuxt를 사용하면 SSR 방식으로 사용할 수 있습니다.`}</p>\n    <p>{`참고로 Svelte는 SvelteKit과 별개로 SSR 방식으로 동작합니다.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`React를 베이스로 만들어진 것 중에 Gatsby라고 하는 프레임워크도 있는데 Gatsby는 CSR, SSR 둘 다 아닙니다.`}</p>\n      <p parentName=\"blockquote\">{`빌드를 하면 코드가 html 파일처럼 생성되는데 Next.js와 다르게 component도 특별한 서버 없이 동작합니다.`}</p>\n      <p parentName=\"blockquote\">{`이와 같은 형태를 SSG라고 합니다. (이 블로그가 Gatsby로 만들어졌습니다.)`}</p>\n    </blockquote>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20220227/based-frameworks.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20220227/based-frameworks.jpg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>스티커 구해서 맥북에 붙이고 싶다.</figcaption>\n    </figure>\n    <hr></hr>\n    <h2>{`프로젝트 생성 및 실행하기`}</h2>\n    <p>{`If, Angular Universal`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`# Angular CLI\nng new project-name\ncd project-name\nng add @nguniversal/express-engine --clientProject project-name\nng add @nguniversal/aspnetcore-engine --clientProject project-name\nng add @nguniversal/hapi-engine --clientProject project-name\nng add @nguniversal/socket-engine --clientProject project-name`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If, Next.js`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`# Yarn\nyarn create next-app\ncd project-name\nyarn dev\n\n# npx, npm\nnpx create-next-app\ncd project-name\nnpm run dev`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If, SvelteKit`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`# Yarn\nyarn create svelte@next project-name\ncd project-name\nyarn add\nyarn dev\n\n# npm\nnpm init svelte@next project-name\ncd project-name\nnpm i\nnpm run dev`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`If, Nuxt`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`# Yarn\nyarn create nuxt-app project-name\ncd project-name\nyarn dev\n\n# npm\nnpm init nuxt-app project-name\ncd project-name\nnpm run dev`}</code>{`\n        `}</deckgo-highlight-code>\n    <h2>{`디렉토리(폴더) 구조 보기`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`부득이하게 `}<inlineCode parentName=\"p\">{`Angular Universal`}</inlineCode>{`는 생략했습니다.`}</p>\n    </blockquote>\n    <p>{`If, Next.js`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`├── README.md\n├── next.config.js\n├── package-lock.json\n├── package.json\n├── pages\n│　 ├── _app.js\n│　 ├── api\n│　 │　 └── hello.js\n│　 └── index.js\n├── public\n│　 ├── favicon.ico\n│　 └── vercel.svg\n└── styles\n    ├── Home.module.css\n    └── globals.css`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`image를 object로 관리할 때는 `}<inlineCode parentName=\"p\">{`/assets`}</inlineCode>{`를 만들어서 관리하고, components는 `}<inlineCode parentName=\"p\">{`/components`}</inlineCode>{`를 만들어서 관리합니다.`}</p>\n    <p>{`JavaScript의 `}<inlineCode parentName=\"p\">{`document`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`window`}</inlineCode>{`는 쓸 수 없습니다. 다만 SSR이 아닌 CSR로 컴포넌트를 불러올 수 있기 때문이 이를 사용하면 사용이 가능합니다.`}</p>\n    <p>{`React에서는 `}<inlineCode parentName=\"p\">{`<head>`}</inlineCode>{`를 관리하려면 `}<inlineCode parentName=\"p\">{`React-Helmet`}</inlineCode>{`이라든가 하는 패키지를 사용해야하지만 Next.js에서는 자체 내장되어 있는 `}<inlineCode parentName=\"p\">{`next/head`}</inlineCode>{`를 사용하면 쉽게 구현이 가능합니다.`}</p>\n    <p>{`React와 다르게 html ~ head, body 관리를 하기 위해서는 `}<inlineCode parentName=\"p\">{`/pages/_document.js`}</inlineCode>{`를 사용합니다.`}</p>\n    <p>{`If, SvelteKit`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`├── README.md\n├── jsconfig.json\n├── package.json\n├── playwright.config.js\n├── src\n│　 ├── app.css\n│　 ├── app.html\n│　 ├── hooks.js\n│　 ├── lib\n│　 │　 ├── Counter.svelte\n│　 │　 ├── form.js\n│　 │　 └── header\n│　 │　     ├── Header.svelte\n│　 │　     └── svelte-logo.svg\n│　 └── routes\n│　     ├── __layout.svelte\n│　     ├── about.svelte\n│　     ├── index.svelte\n│　     └── todos\n│　         ├── _api.js\n│　         ├── index.js\n│　         └── index.svelte\n├── static\n│　 ├── favicon.png\n│　 ├── robots.txt\n│　 ├── svelte-welcome.png\n│　 └── svelte-welcome.webp\n├── svelte.config.js\n└── tests\n    └── test.js`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`패키지가 설치가 된 상태가 아니기 때문에 `}<inlineCode parentName=\"p\">{`yarn add`}</inlineCode>{` 또는 `}<inlineCode parentName=\"p\">{`npm i`}</inlineCode>{` 실행해야 합니다.`}</p>\n    <p>{`body 태그 안의 기본 구조는 /src/app.html 에서 관장합니다. 전체 구조를 body에서 각각의 페이지에서 개별 작동하게 코드를 쓸 수 있습니다. `}<inlineCode parentName=\"p\">{`%svelte.head%`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`%svelte.body%`}</inlineCode></p>\n    <p><inlineCode parentName=\"p\">{`%svelte.assets%`}</inlineCode>{`를 이용해서 절대경로(http 또는 https 프로토콜 포함한 경로)로 이미지를 불러올 수 있습니다. (주로 link 태그나 meta 태그에 사용)`}</p>\n    <p>{`Svelte는 컴포넌트 Component 대신 라이브러리 Library (`}<inlineCode parentName=\"p\">{`/src/lib`}</inlineCode>{` 디렉토리) 라고 부릅니다.`}</p>\n    <p>{`JavaScript로만 이루어진 라이브러리는 기존대로 `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` 확장자를 씁니다.`}</p>\n    <p>{`If, Nuxt`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"shell\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`├── README.md\n├── components\n│　 ├── NuxtLogo.vue\n│　 └── Tutorial.vue\n├── jest.config.js\n├── nuxt.config.js\n├── package-lock.json\n├── package.json\n├── pages\n│　 └── index.vue\n├── static\n│　 └── favicon.ico\n├── store\n│　 └── README.md\n└── test\n    └── NuxtLogo.spec.js`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`컴포넌트 기본 확장자가 `}<inlineCode parentName=\"p\">{`.vue`}</inlineCode>{`인 것을 확인할 수 있어요.`}</p>\n    <p>{`body 태그 안의 기본 구조는 `}<inlineCode parentName=\"p\">{`/nuxt.config.js`}</inlineCode>{`에 정의되어 있습니다.`}</p>\n    <p>{`페이지 단위로 작성은 `}<inlineCode parentName=\"p\">{`/pages`}</inlineCode>{`에 넣으면 되고 컴포넌트 단위 작성은 `}<inlineCode parentName=\"p\">{`/components`}</inlineCode>{`에 넣으면 됩니다.`}</p>\n    <p>{`컴포넌트를 불러오는 것은 import를 따로 할 필요없이 태그 형태로 작성하면 불러옵니다.`}</p>\n    <deckgo-highlight-code {...{\n      \"language\": \"html\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`<template>\n  <Tutorial/>\n</template>`}</code>{`\n        `}</deckgo-highlight-code>\n    <p>{`위와같이 코드를 작성하면 `}<inlineCode parentName=\"p\">{`/components/Tutorial.vue`}</inlineCode>{`를 불러옵니다.`}</p>\n    <hr></hr>\n    <h2>{`Epilogue`}</h2>\n    <p>{`각 베이스 프레임워크에 대해서 간단히 설치법과 사용법을 안내해 드렸습니다.`}</p>\n    <p>{`개발에 대해 아주 백지인 상태가 아니라면 이해하는데 지장은 없었을 거라고 생각해요.`}</p>\n    <p>{`그럼 다음에 또 만나요! 다음 글 `}<strong parentName=\"p\">{`관많부!!!`}</strong></p>\n    <figure>\n  <picture>\n    <source srcSet={`/0/20220227/javastrip.webp?${uuidv4()}`} type=\"image/webp\" />\n    <img src={`/0/20220227/javastrip.jpg?${uuidv4()}`} alt='' />\n  </picture>\n  <figcaption>자바스트립...</figcaption>\n    </figure>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from \"react\"\nimport { v4 as uuidv4 } from 'uuid';\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Articles.module.sass'\nimport Article from '../contents/20220227'\nimport Profile from '../components/pages/profile.js'\nimport Pager from '../components/pages/pager'\nimport PostComment from '../components/utilities/utterances'\n\nfunction ArticlePage() {\n  const siteAddress = `https://dev1stud.io/`\n  const siteTitle = 'O612 DEV1L.studio'\n  const pageTitle = 'Angular Universal, Next.js, SveltKit 그리고 Nuxt의 비교!'\n  const pageDateTime = '2022.02.27'\n  const pageIdentifier = pageDateTime.replace(/\\./g, '')\n  const pageAddress = siteAddress + pageIdentifier\n  const ogAddress = siteAddress + '0/' + pageIdentifier\n  const subTitle = '혹시 Angular Universal, Next.js 그리고 SveltKit이라고 들어봤니?'\n\n  return (\n    <Container>\n      <GatsbySeo\n        title={`${pageTitle} | ${siteTitle}`}\n        description={subTitle}\n        canonical={pageAddress}\n        metaTags={[{\n          property: 'keywords',\n          content: 'angular, react, svelte, vue, angular universal, nextjs, sveltkit, 앵귤러, 리액트, 스벨트, 뷰, 유니버셜, 넥스트, 스벨트킷, 스벨트키트'\n        }]}\n        openGraph={{\n          type: 'article',\n          title: siteTitle,\n          description: pageTitle,\n          url: pageAddress,\n          images: [{ url: ogAddress + '/javastrip.jpg' }],\n        }}\n      />\n      <article className={styles['articlePage']}>\n        <h1>{pageTitle}</h1>\n        <small>{subTitle}</small>\n        <time>{pageDateTime}</time>\n        <picture>\n          <source srcSet={`/0/${pageIdentifier}/summary.webp?${uuidv4()}`} type=\"image/webp\" />\n          <img src={`/0/${pageIdentifier}/summary.png?${uuidv4()}`} alt='' />\n        </picture>\n        <Article />\n        <strong className={styles['articleFIN']}>FIN!</strong>\n      </article>\n      <aside><Profile /></aside>\n      <Pager\n        previousAddress={`/20220204`}\n        previousTitle={'Angular, React, Svelte 그리고 Vue로 스타일링 해볼까?'}\n      />\n      <PostComment />\n    </Container>\n  )\n}\n\nexport default ArticlePage\n"],"names":["SENDBOX_TITLE","src","title","allow","sandbox","VIDEO_ID","width","height","allowFullScreen","deckDeckGoHighlightElement","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","srcSet","uuidv4","type","alt","isMDXComponent","siteAddress","siteTitle","pageTitle","pageDateTime","pageIdentifier","replace","pageAddress","ogAddress","subTitle","GatsbySeo","description","canonical","metaTags","property","content","openGraph","url","images","className","styles","previousAddress","previousTitle"],"sourceRoot":""}