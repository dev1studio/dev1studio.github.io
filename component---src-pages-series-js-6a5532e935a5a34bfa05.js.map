{"version":3,"file":"component---src-pages-series-js-6a5532e935a5a34bfa05.js","mappings":"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","sources":["webpack://dev1studio/./node_modules/uuid/dist/esm-browser/rng.js","webpack://dev1studio/./node_modules/uuid/dist/esm-browser/regex.js","webpack://dev1studio/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://dev1studio/./node_modules/uuid/dist/esm-browser/validate.js","webpack://dev1studio/./node_modules/uuid/dist/esm-browser/v4.js","webpack://dev1studio/./src/components/pages/profile.js","webpack://dev1studio/./src/styles/Profile.module.sass","webpack://dev1studio/./src/components/pages/route.js","webpack://dev1studio/./src/apis/series.js","webpack://dev1studio/./src/pages/series.js","webpack://dev1studio/./src/styles/Home.module.sass"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import * as React from \"react\"\nimport * as styles from '../../styles/Profile.module.sass'\n\nconst Profile = () => (\n  <div className={styles['profile']}>\n    <i />\n    <div className={styles['profileContents']}>\n      <cite>O612</cite>\n      <p>\n        <span>‚ôÄ 6Ïõî 12ÏùºÏÉù OÎ™®Ïî®.</span>\n        <span>ÎåÄÏ†ÑÏóê ÏßÅÏû•ÏùÑ Îëî ÏÑúÏö∏Îü¨ (ÌîÑÎ°ú Î¶¨Î™®Ìä∏ÏõåÏª§ üòé)</span>\n        <span>DEV1L.studio Îç∞Î∏åÎü∞Îã∑ Ïä§ÌäúÎîîÏò§ Ìé∏ÏßëÏû•.</span>\n      </p>\n    </div>\n  </div>\n)\n\nexport default Profile\n","// extracted by mini-css-extract-plugin\nexport var profile = \"Profile-module--profile--eKQjx\";\nexport var profileContents = \"Profile-module--profileContents--SH1vY\";","import * as React from \"react\"\nimport styled from '@emotion/styled'\nimport { colors } from '../../styles/designSystem'\nimport LinkButton from '../utilities/linkButton'\n\nconst ActiveButton = styled(LinkButton)(({ $current }) => ({\n  backgroundColor: $current ? colors.yellow : null,\n  color: $current ? colors.dark : colors.light,\n}))\n\nfunction Route({ route }) {\n  return (\n    <nav>\n      <ul>\n        <li><ActiveButton href='/' $current={route === 'home'}>Ï†ÑÏ≤¥ Í∏Ä</ActiveButton></li>\n        <li><ActiveButton href='/series' $current={route === 'series'}>ÏãúÎ¶¨Ï¶à</ActiveButton></li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Route\n","import { v4 as uuidv4 } from 'uuid';\n\nconst series = [\n  {\n    id: uuidv4(),\n    thumbnail: \"/series/devil-styled-sheets.png\",\n    category: \"Devil Styled Sheets\",\n    url: \"/devil-styled-sheets\",\n  },\n]\n\nexport default series;\n","import * as React from \"react\"\nimport series from '../apis/series'\nimport { GatsbySeo } from \"gatsby-plugin-next-seo\"\nimport Container from '../components/layout'\nimport * as styles from '../styles/Home.module.sass'\nimport Profile from '../components/pages/profile'\nimport LinkButton from '../components/utilities/linkButton'\nimport Route from '../components/pages/route'\n\nfunction SeriesPage() {\n  return (\n    <Container>\n      <GatsbySeo\n        title='Series | O612 DEV1L.studio'\n        description='O612Ïùò ÏïÖÎßàÏ†ÅÏù∏ Í≥µÍ∞Ñ - Îç∞Î≤åÎ¶¨Ïãú Îç∞Î∏åÎü∞Îã∑ Ïä§ÌäúÎîîÏò§'\n        canonical='https://dev1stud.io/'\n        openGraph={{\n          type: 'site',\n          title: 'O612 DEV1L.studio',\n          description: 'Home - Series',\n          url: 'https://dev1stud.io/series',\n          images: [{ url: 'https://dev1stud.io/misc/open-graph-home.png' }],\n        }}\n      />\n      <main className={styles['mainPage']}>\n        <Profile />\n        <Route route='series' />\n        <ul>\n          {series.map(sery => (\n            <li key={sery.id}>\n              <LinkButton href={sery.url}>\n                <div className={styles['listThumbnail']}>\n                  <i style={{ backgroundImage: `url(${sery.thumbnail}` }} />\n                  {sery.badge && (\n                    <span aria-label=\"New Badge\">ÏÉàÍ∏Ä</span>\n                  )}\n                </div>\n                <strong>{sery.category}</strong>\n              </LinkButton>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </Container>\n  )\n}\n\nexport default SeriesPage\n","// extracted by mini-css-extract-plugin\nexport var listThumbnail = \"Home-module--listThumbnail--HZuiW\";\nexport var mainPage = \"Home-module--mainPage--UXbqG\";"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","className","ActiveButton","LinkButton","$current","backgroundColor","colors","color","route","href","id","uuidv4","thumbnail","category","url","GatsbySeo","title","description","canonical","openGraph","type","images","styles","series","sery","key","style","backgroundImage","badge","listThumbnail","mainPage"],"sourceRoot":""}