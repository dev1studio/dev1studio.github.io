"use strict";(self.webpackChunkdev1studio=self.webpackChunkdev1studio||[]).push([[2262],{2929:function(e,t,n){n(7294);var l=n(3431);t.Z=function(e){var t=e.VIDEO_ID;return(0,l.tZ)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/"+t,title:"YouTube video player",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})}},7421:function(e,t,n){n.r(t),n.d(t,{default:function(){return S}});n(7294);var l=n(9789),o=n(4125),a=n(8678),i=n(3579),p=n(7462),r=n(3366),s=n(4983),u=n(2929),c=(n(2844),n(2335),n(6480)),d=["components"];(0,c.q)();var k={_frontmatter:{}};function g(e){var t=e.components,n=(0,r.Z)(e,d);return(0,s.kt)("wrapper",(0,p.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",null,"Prologue"),(0,s.kt)("figure",null,(0,s.kt)(u.Z,{VIDEO_ID:"aEZ-CiML1pA",mdxType:"YouTubeVideo"}),(0,s.kt)("figcaption",null,"클래스 이름이 뭐예요? ",(0,s.kt)("del",null,"(나 쉬운 클래스 아니예요)"))),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("inlineCode",{parentName:"p"},"Next.js"),"로 예제를 작성했으니 염두하고 읽어주세요")),(0,s.kt)("hr",null),(0,s.kt)("h2",null,"CSS (CSS Module 말고 그냥 CSS)"),(0,s.kt)("figure",null,(0,s.kt)("picture",null,(0,s.kt)("source",{srcSet:"/0/20211217/css-error.webp?"+(0,l.Z)(),type:"image/webp"}),(0,s.kt)("img",{src:"/0/20211217/css-error.jpeg?"+(0,l.Z)(),alt:""})),(0,s.kt)("figcaption",null,"Global CSS를 사용하라는 에러가 뜸")),(0,s.kt)("p",null,"CSS Module(",(0,s.kt)("inlineCode",{parentName:"p"},".module.css"),")이 아닌 CSS(",(0,s.kt)("inlineCode",{parentName:"p"},".css"),")를 생성해서 사용하려고 하면 에러가 뜹니다."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Next.js"),"에서는 ",(0,s.kt)("inlineCode",{parentName:"p"},"global.css"),"(또는 global.sass)를 제외한 CSS 파일은 지원하지 않기 때문에 에러가 뜨는 것입니다."),(0,s.kt)("p",null,"그래서 단순 CSS 파일은 한글로 작성하든, 영문으로 작성하든, 어떤 형태든 위처럼 에러가 뜨는 것을 확인할 수 있습니다."),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("inlineCode",{parentName:"p"},"global.css"),"를 ",(0,s.kt)("inlineCode",{parentName:"p"},"글로벌.css")," 처럼 non-English 형태로 작성하고 ",(0,s.kt)("inlineCode",{parentName:"p"},"_app.js"),"에서 ",(0,s.kt)("inlineCode",{parentName:"p"},"global.css")," 대신 ",(0,s.kt)("inlineCode",{parentName:"p"},"글로벌.css"),"로 임포트를 해서 사용하는 것은 아무런 문제가 없습니다.")),(0,s.kt)("deckgo-highlight-code",{language:"scss"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},"/* styles/글로벌.css */\n.헬로월드 {\n  color: pink;\n}"),"\n        "),(0,s.kt)("deckgo-highlight-code",{language:"jsx"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},"<div className='헬로월드'>헬로월드</div>"),"\n        "),(0,s.kt)("p",null,"모던 브라우저라면 utf-8 지원하기 때문에 특별한 이상없이 다음과 같이 렌더링됩니다."),(0,s.kt)("deckgo-highlight-code",{language:"html"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},'<div class="헬로월드">헬로월드</div>'),"\n        "),(0,s.kt)("p",null,"지정한 컬러인 핑크로도 제대로 동작합니다."),(0,s.kt)("h2",null,"CSS Module"),(0,s.kt)("p",null,"이제 우리가 궁금한 CSS Module 형태에서 Class 이름이 어떻게 적용되는지 알아보도록 해요!"),(0,s.kt)("p",null,"CSS는 솔직히 별로 안 궁금했잖아요. (...)"),(0,s.kt)("deckgo-highlight-code",{language:"scss"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},".콘테이너 {\n  background-color: orange;\n  padding: 1em;\n  width: 7rem;\n  font-size: 1rem;\n  color: purple;\n}"),"\n        "),(0,s.kt)("deckgo-highlight-code",{language:"jsx"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},"import styles from './index.module.css'\n\nfunction 홈() {\n  return (\n    <div className={styles.콘테이너}>\n      헬로 월드\n    </div>\n  )\n}\n\nexport default 홈"),"\n        "),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"className에 하이픈(-)을 넣고 싶으면 ",(0,s.kt)("inlineCode",{parentName:"p"},"{styles['부모-자식']}")," 이렇게 ",(0,s.kt)("inlineCode",{parentName:"p"},"['']")," 부호로 class를 감싸면 됩니다.")),(0,s.kt)("p",null,"결과."),(0,s.kt)("deckgo-highlight-code",{language:"html"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},'<div class="index_______b99_u">헬로 월드</div>'),"\n        "),(0,s.kt)("figure",null,(0,s.kt)("picture",null,(0,s.kt)("source",{srcSet:"/0/20211217/nunal.webp?"+(0,l.Z)(),type:"image/webp"}),(0,s.kt)("img",{src:"/0/20211217/nunal.jpeg?"+(0,l.Z)(),alt:""})),(0,s.kt)("figcaption",null,"??!?")),(0,s.kt)("p",null,"non-English로 이름을 지으면 언더스코어(_)로 변환이 됩니다."),(0,s.kt)("p",null,"클래스 뒷쪽이 랜덤으로 생성되기 때문에 렌더링은 정상적으로 되기 때문에 사용하는데는 지장은 없습니다."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},".콘테이너"),"에 넣어둔 Property와 Value는 정상 동작해요."),(0,s.kt)("h2",null,"'import styled'를 'import 스타일드'로 변경"),(0,s.kt)("deckgo-highlight-code",{language:"jsx"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},"import 스타일드 from '@emotion/styled'\n\nconst Container = 스타일드.main({\n  fontWeight: 'bolder',\n})\n\nfunction Home() {\n  return <Container>styled 변경 테스트</Container>\n}\n\nexport default Home"),"\n        "),(0,s.kt)("p",null,"이렇게 코드를 작성했는데 이상한 부분은 발견이 되지 않았습니다."),(0,s.kt)("p",null,"그래서 ",(0,s.kt)("inlineCode",{parentName:"p"},"Home()"),"을 ",(0,s.kt)("inlineCode",{parentName:"p"},"홈()"),"으로 추가로 변경했는데 이 역시 문제는 없었어요."),(0,s.kt)("p",null,"여기서 가상 DOM인 ",(0,s.kt)("inlineCode",{parentName:"p"},"Container"),"를 ",(0,s.kt)("inlineCode",{parentName:"p"},"콘테이너"),"로 변경해봤는데 여기서도 문제는 없었습니다."),(0,s.kt)("p",null,"위에서 이미 진행한 className을 한글로 지정하는 것도 추가로 진행했고 이상 없음."),(0,s.kt)("p",null,"마지막으로 CSS Module 파일명도 한글로 바꿨습니다."),(0,s.kt)("deckgo-highlight-code",{language:"jsx"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},"error - uncaughtException: TypeError: Cannot read properties of undefined (reading 'updateHash')"),"\n        "),(0,s.kt)("p",null,"그러자 위 같은 에러가 뜹니다."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"styled"),"를 ",(0,s.kt)("inlineCode",{parentName:"p"},"스타일드"),"로 바꾸거나 CSS Module 파일명을 한글로 바꾸거나 둘 중 하나만 했을 때는 에러가 없었는데 둘 다 한글로 바꾸니 에러가 떴습니다."),(0,s.kt)("p",null,"이렇게 변태적으로 코딩하는 경우가 없어서 그런지 아무리 구글과 스택오버플로우 사이트를 뒤져도 해결하는 방법이 나오진 않았습니다."),(0,s.kt)("figure",null,(0,s.kt)("picture",null,(0,s.kt)("source",{srcSet:"/0/20211217/koseuk.webp?"+(0,l.Z)(),type:"image/webp"}),(0,s.kt)("img",{src:"/0/20211217/koseuk.jpeg?"+(0,l.Z)(),alt:""})),(0,s.kt)("figcaption",null,"...드디어 찾.았.다.")),(0,s.kt)("hr",null),(0,s.kt)("h2",null,"Epilogue"),(0,s.kt)("p",null,"한가지 주의할 점은 git 관리시 파일명 인코딩이 깨질 수 있으니 터미널에서 다음 명령어를 내려줄 필요가 있습니다. (물론 이렇게 코딩할 사람은 없을 거라고 생각하지만...)"),(0,s.kt)("deckgo-highlight-code",{language:"shell"},"\n          ",(0,s.kt)("code",{parentName:"deckgo-highlight-code",slot:"code"},"$ git config --global core.quotepath false"),"\n        "),(0,s.kt)("p",null,"그리고 macOS, Linux, Windows는 각각 파일명 및 디렉토리명 인코딩 처리 방법이 다르므로 여러 협업자가 서로 다른 운영체제에서 개발 중이라면 파일명 관련해서 어떤 이슈가 발생할지 장담할 수 없습니다."),(0,s.kt)("p",null,"파일명과 디렉토리명 만큼은 OS를 통일하던가, 영문으로만 관리하던가 둘 중 하나를 택하길 바라요."),(0,s.kt)("p",null,"한글로 뻘짓하기는 여기서 마무리하고 다음에는 다양한 non-English 글자들로 테스트 해보겠습니다!"))}g.isMDXComponent=!0;var m=n(4396),h=n(5941),C=n(9289),N=n(3431);var S=function(){var e="https://dev1stud.io/",t="O612 DEV1L.studio",n="class & className 이름을 한글로 지어보기",p="2021.12.17",r=p.replace(/\./g,""),s=e+r,u=e+"0/"+r,c="Ireumi mwoyeyo? 와춰네임!";return(0,N.tZ)(a.Z,null,(0,N.tZ)(o.GatsbySeo,{title:n+" | "+t,description:c,canonical:s,metaTags:[{property:"keywords",content:"react, css, sass, module, class, classname, hangul, 리액트, 모듈, 클래스, 한글"}],openGraph:{type:"article",title:t,description:n,url:s,images:[{url:u+"/koseuk.jpeg"}]}}),(0,N.tZ)("article",{className:i.xI},(0,N.tZ)("h1",null,n),(0,N.tZ)("small",null,c),(0,N.tZ)("time",null,p),(0,N.tZ)("picture",null,(0,N.tZ)("source",{srcSet:"/0/"+r+"/summary.webp?"+(0,l.Z)(),type:"image/webp"}),(0,N.tZ)("img",{src:"/0/"+r+"/summary.png?"+(0,l.Z)(),alt:""})),(0,N.tZ)(g,null),(0,N.tZ)("strong",{className:i.zs},"FIN!")),(0,N.tZ)("aside",null,(0,N.tZ)(m.Z,null)),(0,N.tZ)(h.Z,{previousAddress:"/20211216",previousTitle:"디렉토리명과 이미지 파일명을 한글로 지정하면 어떻게 될까?",nextAddress:"/20211218",nextTitle:"일본의 `카나`를 React에서 이름으로 써보기"}),(0,N.tZ)(C.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-20211217-js-f187e4e0d003b96781a6.js.map